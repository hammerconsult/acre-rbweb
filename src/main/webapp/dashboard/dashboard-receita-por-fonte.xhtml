<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//PT"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:fc="http://java.sun.com/jsf/composite/components"
      xmlns:co="http://java.sun.com/jsf/composite/components/contabil"
      xmlns:p="http://primefaces.org/ui"
>
<ui:composition template="/corpo.xhtml">
    <ui:define name="body">

        <h:form id="Formulario" style="background-color: #eaeaea!important;">

            <p:panel>

                <div style="text-align: center!important; ">
                    <img src="/img/graph.jpg" width="40" height="40" alt="imagem de um gráfico"
                         style="margin-top: 10px!important;"/>
                    <h1>Dashboard de Receitas Realizadas Por Fonte</h1>
                </div>


                <div class="row">
                    <div class="col-md-3 col-md-offset-2">
                        <h3>Selecione o tipo de dados</h3>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary active" id="quantidade"
                                    onclick="atribuirTipo(false)">Quantidade
                            </button>
                            <button type="button" class="btn btn-primary" id="procentagem"
                                    onclick="atribuirTipo(true)">Porcentagem
                            </button>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <h3> Selecione o tipo do grafico</h3>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary active" id="barra"
                                    onclick="atribuirDashBoard('bar')">Barra
                            </button>
                            <button type="button" class="btn btn-primary" id="linha"
                                    onclick="atribuirDashBoard('line')">Linha
                            </button>
                            <button type="button" class="btn btn-primary" id="pizza"
                                    onclick="atribuirDashBoard('pie')">Pizza
                            </button>
                        </div>
                    </div>

                    <div class="col-md-3">
                        <h3> Agrupar secretaria e fonte?</h3>
                        <div class="btn-group">
                            <button type="button" class="btn btn-primary" id="agruparOrgaoFonte"
                                    onclick="atribuirAgrupador(true)">Sim
                            </button>

                            <button type="button" class="btn btn-primary active" id="naoAgruparOrgaoFonte"
                                    onclick="atribuirAgrupador(false)">Não
                            </button>
                        </div>
                    </div>
                </div>

                <hr class="divider"/>
                <div class="row">
                    <div class="col-md-4">
                        <table>
                            <tr>
                                <th></th>
                                <th>Ano</th>
                            </tr>
                            <ui:repeat value="#{dashboardReceitaRealizadaPorFonteControlador.exercicios}"
                                       var="exercicio">
                                <tr>
                                    <td>
                                        <a class="btn fa fa-asterisk" onclick="selecionarExercicio('${exercicio.id}');"
                                           id="${exercicio.id}"/>

                                    </td>
                                    <td>
                                        <h:outputText value="#{exercicio.ano}"/>

                                    </td>
                                </tr>
                            </ui:repeat>

                        </table>
                    </div>

                    <div class="col-md-4">
                        <table>
                            <tr>
                                <th></th>
                                <th>Secretarias</th>
                            </tr>
                            <ui:repeat value="#{dashboardReceitaRealizadaPorFonteControlador.hierarquias}"
                                       var="hierarquia">
                                <tr>
                                    <td>
                                        <a class="btn fa fa-asterisk"
                                           onclick="selecionarSecretaria('${hierarquia.id}');"
                                           id="${hierarquia.id}"/>
                                    </td>
                                    <td>
                                        <h:outputText value="#{hierarquia.toString()}"/>
                                    </td>
                                </tr>
                            </ui:repeat>

                        </table>
                    </div>

                    <div class="col-md-4">
                        <table>
                            <tr>
                                <th></th>
                                <th>Fontes</th>
                            </tr>
                            <ui:repeat value="#{dashboardReceitaRealizadaPorFonteControlador.fontes}" var="fonte">
                                <tr>
                                    <td>
                                        <a class="btn fa fa-asterisk" onclick="selecionarFonte('${fonte.id}');"
                                           id="${fonte.id}"/>
                                    </td>
                                    <td>
                                        <h:outputText value="#{fonte.toString()}"/>
                                    </td>
                                </tr>
                            </ui:repeat>
                        </table>
                    </div>
                </div>


                <p:commandButton value="Buscar Informações"
                                 icon="ui-icon-search"
                                 styleClass="icone_azul"
                                 update="@none"
                                 process="@none"
                                 id="btnBuscar"
                                 style=" height: 32px;"
                                 onclick="pesquisar();"/>

                <p:commandButton value="Limpar"
                                 icon="ui-icon-clear"
                                 styleClass="icone_azul"
                                 update="@none"
                                 process="@none"
                                 id="btnLimpar"
                                 style=" height: 32px;"
                                 onclick="limpar();"/>

            </p:panel>
            <table style="width: 100%!important;" id="tabela">
                <tr style="width: 100%!important;">
                    <td style="width: 100%!important;vertical-align: top!important;">
                        <div class="thumbnail"
                             style="background-color: white!important; margin: 2%!important; height: 430px !important;">
                            <div style="height: 400px !important;">
                                <canvas id="charReceitaPorFonte"></canvas>
                            </div>
                        </div>
                    </td>
                </tr>
            </table>
        </h:form>

        <script src="#{facesContext.externalContext.requestContextPath}/resources/js/chart_js/dist/Chart.js"></script>

        <script type="text/javascript">
            var charReceitaPorFonte = null;
            var tipoDash = "bar";
            var porcentagem = false;
            var agruparOrgaoFonte = false;
            var arrayFontes = [];
            var arrayExercicios = [];
            var arraySecretarias = [];


            function selecionarExercicio(idExericio) {
                if (arrayExercicios.includes(idExericio)) {
                    arrayExercicios.splice(arrayExercicios.indexOf(idExericio), 1);
                    var classes = document.getElementById(idExericio).classList;
                    classes.remove("fa-check-circle-o");
                    classes.remove("verde");
                    classes.add("fa-asterisk");
                } else {
                    arrayExercicios.push(idExericio);
                    var classes = document.getElementById(idExericio).classList;
                    classes.remove("fa-asterisk");
                    classes.add("fa-check-circle-o");
                    classes.add("verde");
                }
            }

            function selecionarFonte(idFonte) {
                if (arrayFontes.includes(idFonte)) {
                    arrayFontes.splice(arrayFontes.indexOf(idFonte), 1);
                    var classes = document.getElementById(idFonte).classList;
                    classes.remove("fa-check-circle-o");
                    classes.remove("verde");
                    classes.add("fa-asterisk");
                } else {
                    arrayFontes.push(idFonte);
                    var classes = document.getElementById(idFonte).classList;
                    classes.remove("fa-asterisk");
                    classes.add("fa-check-circle-o");
                    classes.add("verde");
                }
            }

            function selecionarSecretaria(idHierarquia) {
                if (arraySecretarias.includes(idHierarquia)) {
                    arraySecretarias.splice(arraySecretarias.indexOf(idHierarquia), 1);
                    var classes = document.getElementById(idHierarquia).classList;
                    classes.remove("fa-check-circle-o");
                    classes.remove("verde");
                    classes.add("fa-asterisk");
                } else {
                    arraySecretarias.push(idHierarquia);
                    var classes = document.getElementById(idHierarquia).classList;
                    classes.remove("fa-asterisk");
                    classes.add("fa-check-circle-o");
                    classes.add("verde");
                }

            }

            window.onload = function () {
                jQuery('#Formulario\\:btnLimpar').addClass('ui-state-disabled');
            }

            function atribuirTipo(valor) {
                this.porcentagem = valor;

                if (porcentagem == true) {
                    jQuery('#procentagem').addClass('active');
                    jQuery('#quantidade').removeClass('active');
                } else {
                    jQuery('#procentagem').removeClass('active');
                    jQuery('#quantidade').addClass('active');
                }

            }

            function atribuirDashBoard(valor) {
                this.tipoDash = valor;

                if (tipoDash == "bar") {
                    jQuery('#barra').addClass('active');
                    jQuery('#linha').removeClass('active');
                    jQuery('#pizza').removeClass('active');
                } else if (tipoDash == "line") {
                    jQuery('#barra').removeClass('active');
                    jQuery('#linha').addClass('active');
                    jQuery('#pizza').removeClass('active');
                } else {
                    jQuery('#barra').removeClass('active');
                    jQuery('#linha').removeClass('active');
                    jQuery('#pizza').addClass('active');
                }
            }


            function atribuirAgrupador(valor) {
                this.agruparOrgaoFonte = valor;

                if (this.agruparOrgaoFonte == true) {
                    jQuery('#agruparOrgaoFonte').addClass('active');
                    jQuery('#naoAgruparOrgaoFonte').removeClass('active');
                } else {
                    jQuery('#agruparOrgaoFonte').removeClass('active');
                    jQuery('#naoAgruparOrgaoFonte').addClass('active');
                }
            }

            function isNull(arg) {
                if (arg == null == 'null' || arg == null || arg == 'undefined' || arg == '') {
                    return true;
                }
                return false;
            }

            function limpar() {
                try {
                    if (this.charReceitaPorFonte != null) {
                        this.charReceitaPorFonte.destroy();
                    }
                } catch (exception_var_1) {
                    console.log(exception_var_1)
                }
                jQuery('#Formulario\\:btnBuscar').removeClass('ui-state-disabled');
                jQuery('#Formulario\\:btnLimpar').addClass('ui-state-disabled');
            }

            function pesquisar() {
                var validou = true;

                if (tipoDash == "pie" &amp; agruparOrgaoFonte == false ) {
                    alert('Favor Selecionar SIM no Agrupar secretaria e fonte');
                    validou = false;
                }

                if (validou) {
                    realizarBusca();
                }
            }

            function realizarBusca() {
                aguarde.show();

                jQuery('#Formulario\\:btnBuscar').addClass('ui-state-disabled');
                jQuery('#Formulario\\:btnLimpar').removeClass('ui-state-disabled');

                var charReceitaPorFonte = document.getElementById("charReceitaPorFonte");
                if (charReceitaPorFonte != null) {
                    charReceitaPorFonte = charReceitaPorFonte.getContext("2d")

                    $.ajax({
                        url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-contabil/receita-por-fonte?&amp;porcentagem=' + porcentagem + '&amp;agruparOrgaoFonte=' + agruparOrgaoFonte + '&amp;tipoDash=' + tipoDash + "&amp;arrayFontes=" + arrayFontes + "&amp;arraySecretarias=" + arraySecretarias + "&amp;arrayExercicios=" + arrayExercicios,
                        type: 'POST',
                        data: '',
                        success: function (retorno) {
                            tratarRetorno(charReceitaPorFonte, JSON.parse(retorno));
                            aguarde.hide();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            aguarde.hide();
                        }
                    });
                }
            }

            function tratarRetorno(charReceitaPorFonte, retorno) {
                this.charReceitaPorFonte = new Chart(charReceitaPorFonte, retorno);

                if (tipoDash == "pie") {
                    retorno.options.fill = true;
                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                if (porcentagem == true) {
                                    return formatarValorPorcentagemDashboard(retorno.data.datasets[t.datasetIndex].data[t.index]);
                                } else {
                                    return formatarValorRSDashboard(retorno.data.datasets[t.datasetIndex].data[t.index]);
                                }
                            }
                        }
                    };
                } else {
                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                if (porcentagem == true) {
                                    return formatarValorPorcentagemDashboard(retorno.data.datasets[t.datasetIndex].data[t.index]);
                                } else {
                                    return formatarValorRSDashboard(retorno.data.datasets[t.datasetIndex].data[t.index]);
                                }
                            }
                        }
                    };

                    retorno.options.scales = {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true,
                                callback: function (value, index, values) {
                                    if (porcentagem == true) {
                                        return formatarValorPorcentagemDashboard(value);
                                    } else {
                                        return formatarValorRSDashboard(value);
                                    }
                                }
                            }
                        }]
                    };
                }

                retorno.options.legend = {
                    display: true,
                    position: 'bottom'
                };

                retorno.options.responsive = true;
                retorno.options.maintainAspectRatio = false;
                if (tipoDash == "line") {
                    retorno.options.fill = false;
                    retorno.options.showLines = true;
                }
            }
        </script>
    </ui:define>
</ui:composition>
</html>
