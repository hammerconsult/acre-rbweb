<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//PT"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:fc="http://java.sun.com/jsf/composite/components"
      xmlns:co="http://java.sun.com/jsf/composite/components/contabil"
      xmlns:p="http://primefaces.org/ui"
>
<ui:composition template="/corpo.xhtml">
    <ui:define name="body">
        <h:form id="Formulario">

            <p:commandButton value="Gerar Relatório"
                             icon="ui-icon-print"
                             style="height: 30px"
                             styleClass="prioritario mrig05"
                             onclick="aguarde.show()"
                             oncomplete="aguarde.hide()"
                             actionListener="#{dashboardContratoControlador.gerarRelatorio()}"
                             title="Clique para gerar o Relatório"/>

            <div class="col-md-12 text-raleway painelGraficos" style="background-color: #eaeaea!important;">
                <div class="col-md-12 centralizado mbot10">
                    <h1>LICITAÇÕES E CONTRATOS</h1>
                    <h1><h:outputText value="#{sistemaControlador.anoOperacaoFormatada}"/></h1>


                </div>
                <div class="col-md-4 painel-grafico grafico1">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 400px !important;">
                                <canvas id="chartContratoCompraServico"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 painel-grafico grafico2">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 400px !important;">
                                <canvas id="chartContratoObraEng"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 painel-grafico grafico3">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 180px !important;">
                                <p:panel style="text-align: center!important;" styleClass="mtop10">
                                    <h2>Total de Contratos</h2>
                                    <h2 id="qtdTotalContrato"></h2>
                                    Total de Contratos lançados pela Prefeitura de Rio Branco
                                </p:panel>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 text-raleway painelGraficos" style="background-color: #eaeaea!important;">
                <div class="col-md-4 painel-grafico grafico1">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 400px !important;">
                                <canvas id="charLicitacaoCompraServico"></canvas>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-4 painel-grafico grafico2">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 400px !important;">
                                <canvas id="chartLicitacaoObraEng"></canvas>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-2 painel-grafico grafico3">
                    <div class="ibox">
                        <div class="ibox-content">
                            <div class="row" style="height: 180px !important;">
                                <p:panel style="text-align: center!important;" styleClass="mtop10">
                                    <h2>Total de Licitações</h2>
                                    <h2 id="qtdTotalLicitacao"></h2>
                                    Total de Licitações lançadas pela Prefeitura de Rio Branco
                                </p:panel>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </h:form>

        <script src="#{facesContext.externalContext.requestContextPath}/resources/js/chart_js/dist/Chart.js"></script>

        <script type="text/javascript">

            window.onload = function () {
                pesquisar();
            }


            function pesquisar() {
                aguarde.show();

                var chartContratoCompraServico = document.getElementById("chartContratoCompraServico");
                if (chartContratoCompraServico != null) {
                    chartContratoCompraServico = chartContratoCompraServico.getContext("2d")
                    $.ajax({
                        url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/contrato-por-compra-servico',
                        type: 'POST',
                        data: '',
                        success: function (retorno) {
                            tratarRetornoContratoCompraServico(chartContratoCompraServico, JSON.parse(retorno));
                            aguarde.hide();
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            aguarde.hide();

                        }
                    });
                }

                var chartContratoObraEng = document.getElementById("chartContratoObraEng");
                if (chartContratoObraEng != null) {
                    chartContratoObraEng = chartContratoObraEng.getContext("2d")
                    $.ajax({
                        url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/contrato-por-obra-eng',
                        type: 'POST',
                        data: '',
                        success: function (retorno) {
                            tratarRetornoContratoObraEng(chartContratoObraEng, JSON.parse(retorno));
                            aguarde.hide();

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            aguarde.hide();

                        }
                    });
                }

                var charLicitacaoCompraServico = document.getElementById("charLicitacaoCompraServico");
                if (charLicitacaoCompraServico != null) {
                    charLicitacaoCompraServico = charLicitacaoCompraServico.getContext("2d")
                    $.ajax({
                        url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/licitacao-por-compra-servico',
                        type: 'POST',
                        data: '',
                        success: function (retorno) {
                            tratarRetornoLicitacaoCompraServico(charLicitacaoCompraServico, JSON.parse(retorno));
                            aguarde.hide();

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            aguarde.hide();

                        }
                    });
                }

                var chartLicitacaoObraEng = document.getElementById("chartLicitacaoObraEng");
                if (chartLicitacaoObraEng != null) {
                    chartLicitacaoObraEng = chartLicitacaoObraEng.getContext("2d")
                    $.ajax({
                        url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/licitacao-por-obra-eng',
                        type: 'POST',
                        data: '',
                        success: function (retorno) {
                            tratarRetornoLicitacaoObraEng(chartLicitacaoObraEng, JSON.parse(retorno));
                            aguarde.hide();

                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            aguarde.hide();

                        }
                    });
                }

                $.ajax({
                    url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/total-licitacao',
                    type: 'POST',
                    data: '',
                    success: function (retorno) {
                        tratarRetornoTotalLicitacao(JSON.parse(retorno));
                        aguarde.hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        aguarde.hide();

                    }
                });


                function tratarRetornoTotalLicitacao(retorno) {
                    var totalLicitacao = formatarValorInteiroDashboard(retorno.data.datasets[0].data);
                    getElement('qtdTotalLicitacao').innerHTML = totalLicitacao;
                }

                $.ajax({
                    url: #{facesContext.externalContext.requestContextPath}'/spring/dashboard-administrativo/total-contrato',
                    type: 'POST',
                    data: '',
                    success: function (retorno) {
                        tratarRetornoTotalContrato(JSON.parse(retorno));
                        aguarde.hide();
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        aguarde.hide();

                    }
                });


                function tratarRetornoTotalContrato(retorno) {
                    var totalContrato = formatarValorInteiroDashboard(retorno.data.datasets[0].data);
                    getElement('qtdTotalContrato').innerHTML = totalContrato;
                }


                function tratarRetornoLicitacaoCompraServico(charLicitacaoCompraServico, retorno) {
                    this.charLicitacaoCompraServico = new Chart(charLicitacaoCompraServico, retorno);

                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                return formatarValorInteiroDashboard(retorno.data.datasets[0].data[t.index]);
                            }

                        }
                    };

                    retorno.options.legend = {
                        display: true,
                        position: 'bottom',
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                if (data.labels.length &amp;&amp; data.datasets.length) {
                                    return data.labels.map(function (label, i) {
                                        var meta = chart.getDatasetMeta(0);
                                        var ds = data.datasets[0];
                                        var arc = meta.data[i];
                                        var custom = arc &amp;&amp; arc.custom || {};
                                        var getValueAtIndexOrDefault = Chart.helpers.getValueAtIndexOrDefault;
                                        var arcOpts = chart.options.elements.arc;
                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                        // We get the value of the current label
                                        var value = chart.config.data.datasets[arc._datasetIndex].data[arc._index];

                                        return {
                                            // Instead of `text: label,`
                                            // We add the value to the string
                                            text: label + " : " + formatarValorInteiroDashboard(value),
                                            fillStyle: fill,
                                            strokeStyle: stroke,
                                            lineWidth: bw,
                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                            index: i
                                        };
                                    });
                                } else {
                                    return [];
                                }
                            }
                        }
                    };

                    retorno.options.responsive = true;
                    retorno.options.maintainAspectRatio = false;
                    retorno.options.title = {
                        display: true,
                        text: "Total de Licitações de:",
                        fontSize: 20
                    };
                }

                function tratarRetornoLicitacaoObraEng(chartLicitacaoObraEng, retorno) {
                    this.chartLicitacaoObraEng = new Chart(chartLicitacaoObraEng, retorno);


                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                return formatarValorInteiroDashboard(retorno.data.datasets[0].data[t.index]);
                            }

                        }
                    };
                    retorno.options.legend = {
                        display: true,
                        position: 'bottom',
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                if (data.labels.length &amp;&amp; data.datasets.length) {
                                    return data.labels.map(function (label, i) {
                                        var meta = chart.getDatasetMeta(0);
                                        var ds = data.datasets[0];
                                        var arc = meta.data[i];
                                        var custom = arc &amp;&amp; arc.custom || {};
                                        var getValueAtIndexOrDefault = Chart.helpers.getValueAtIndexOrDefault;
                                        var arcOpts = chart.options.elements.arc;
                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                        // We get the value of the current label
                                        var value = chart.config.data.datasets[arc._datasetIndex].data[arc._index];

                                        return {
                                            // Instead of `text: label,`
                                            // We add the value to the string
                                            text: label + " : " + formatarValorInteiroDashboard(value),
                                            fillStyle: fill,
                                            strokeStyle: stroke,
                                            lineWidth: bw,
                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                            index: i
                                        };
                                    });
                                } else {
                                    return [];
                                }
                            }
                        }
                    };
                    retorno.options.responsive = true;
                    retorno.options.maintainAspectRatio = false;
                    retorno.options.title = {
                        display: true,
                        text: "Total de Licitações de:",
                        fontSize: 20
                    };
                }

                function tratarRetornoContratoCompraServico(chartContratoCompraServico, retorno) {
                    this.chartContratoCompraServico = new Chart(chartContratoCompraServico, retorno);

                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                return formatarValorInteiroDashboard(retorno.data.datasets[0].data[t.index]);
                            }

                        }
                    };

                    retorno.options.legend = {
                        display: true,
                        position: 'bottom',
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                if (data.labels.length &amp;&amp; data.datasets.length) {
                                    return data.labels.map(function (label, i) {
                                        var meta = chart.getDatasetMeta(0);
                                        var ds = data.datasets[0];
                                        var arc = meta.data[i];
                                        var custom = arc &amp;&amp; arc.custom || {};
                                        var getValueAtIndexOrDefault = Chart.helpers.getValueAtIndexOrDefault;
                                        var arcOpts = chart.options.elements.arc;
                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                        // We get the value of the current label
                                        var value = chart.config.data.datasets[arc._datasetIndex].data[arc._index];

                                        return {
                                            // Instead of `text: label,`
                                            // We add the value to the string
                                            text: label + " : " + formatarValorInteiroDashboard(value),
                                            fillStyle: fill,
                                            strokeStyle: stroke,
                                            lineWidth: bw,
                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                            index: i
                                        };
                                    });
                                } else {
                                    return [];
                                }
                            }
                        }
                    };

                    retorno.options.responsive = true;
                    retorno.options.maintainAspectRatio = false;
                    retorno.options.title = {
                        display: true,
                        text: "Total de Contratos de:",
                        fontSize: 20
                    };
                }

                function tratarRetornoContratoObraEng(chartContratoObraEng, retorno) {
                    this.chartContratoObraEng = new Chart(chartContratoObraEng, retorno);


                    retorno.options.tooltips = {
                        callbacks: {
                            label: function (t, d) {
                                return formatarValorInteiroDashboard(retorno.data.datasets[0].data[t.index]);
                            }

                        }
                    };
                    retorno.options.legend = {
                        display: true,
                        position: 'bottom',
                        labels: {
                            generateLabels: function (chart) {
                                var data = chart.data;
                                if (data.labels.length &amp;&amp; data.datasets.length) {
                                    return data.labels.map(function (label, i) {
                                        var meta = chart.getDatasetMeta(0);
                                        var ds = data.datasets[0];
                                        var arc = meta.data[i];
                                        var custom = arc &amp;&amp; arc.custom || {};
                                        var getValueAtIndexOrDefault = Chart.helpers.getValueAtIndexOrDefault;
                                        var arcOpts = chart.options.elements.arc;
                                        var fill = custom.backgroundColor ? custom.backgroundColor : getValueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);
                                        var stroke = custom.borderColor ? custom.borderColor : getValueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);
                                        var bw = custom.borderWidth ? custom.borderWidth : getValueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);

                                        // We get the value of the current label
                                        var value = chart.config.data.datasets[arc._datasetIndex].data[arc._index];

                                        return {
                                            // Instead of `text: label,`
                                            // We add the value to the string
                                            text: label + " : " + formatarValorInteiroDashboard(value),
                                            fillStyle: fill,
                                            strokeStyle: stroke,
                                            lineWidth: bw,
                                            hidden: isNaN(ds.data[i]) || meta.data[i].hidden,
                                            index: i
                                        };
                                    });
                                } else {
                                    return [];
                                }
                            }
                        }
                    };
                    retorno.options.responsive = true;
                    retorno.options.maintainAspectRatio = false;
                    retorno.options.title = {
                        display: true,
                        text: "Total de Contratos de:",
                        fontSize: 20
                    };
                }
            }
        </script>
    </ui:define>
</ui:composition>
</html>
