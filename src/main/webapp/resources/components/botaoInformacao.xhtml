<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:cc="http://java.sun.com/jsf/composite"
      xmlns:p="http://primefaces.org/ui">

    <!-- INTERFACE -->
    <cc:interface>
        <cc:attribute name="id" required="true" />
        <cc:attribute name="gravidade" default="info" />
        <cc:attribute name="title" />
        <cc:attribute name="disabled" default="false"/>
        <cc:attribute name="rendered" />
        <cc:attribute name="resumo" />
        <cc:attribute name="detalhes" />
        <cc:attribute name="styleBotao" />
        <cc:attribute name="styleInfo" />
        <cc:attribute name="styleClassBotao" />
        <cc:attribute name="icon" default="ui-icon-info" />
    </cc:interface>

    <!-- IMPLEMENTATION -->
    <cc:implementation>
        <script type="text/javascript">
            function criarIconeDiv(pai, styleClass) {
                var divIcone = document.getElementById("iconDiv" + pai.id);
                if (divIcone == null) {
                    divIcone = document.createElement('div');
                }
                divIcone.className = "margem-direita-cinco-pixels "
                divIcone.className += styleClass;
                pai.appendChild(divIcone);
            }

            function atribuirStyles(elemento, styles) {
                for (var s in styles) {
                    elemento.style[s] = styles[s];
                }
            }

            function criarNovaDiv(divId, gravidade, titulo, detalhes, style) {
                var divRecemCriada = document.createElement('div');
                atribuirStyles(divRecemCriada, style);
                divId += '_div';
                divRecemCriada.setAttribute("id", divId);
                criarIconeDiv(divRecemCriada, "ui-messages-" + gravidade + "-icon");
                divRecemCriada.innerHTML += "&lt;b>" + titulo + " " + "&lt;/b>";
                divRecemCriada.innerHTML += detalhes;
                divRecemCriada.className = "texto-mensagens sombraParaDiv ui-corner-all ui-messages-" + gravidade;
                divRecemCriada.style.display = "none";
                return divRecemCriada;
            }

            function offsetAcumulativo(element) {
                var top = 0, left = 0;
                do {
                    top += element.offsetTop  || 0;
                    left += element.offsetLeft || 0;
                    element = element.offsetParent;
                } while(element);

                return {
                    top: top,
                    left: left
                };
            };

            function definirPosicionamento(botao, style) {
                // Posicionamento em relação a margem esquerda
                const { top, left } = offsetAcumulativo(botao);
                var posicaoBotao = left;
                var larguraInfo = parseInt(style.width);

                if ((larguraInfo + posicaoBotao) >= window.innerWidth) {
                    posicaoBotao = larguraInfo + posicaoBotao - (larguraInfo * 2);
                    posicaoBotao -= 30;
                } else {
                    posicaoBotao = left + 40;
                }
                style.left = ''.concat(posicaoBotao, 'px');
                // Posicionamento em relação ao TOPO
                var posicaoTop = top - 10;
                style.top = ''.concat(posicaoTop, 'px');
            }

            function tratarStyleCSS(botao, divId) {
                // Recupera o style que o programador definiu
                var elementoId = 'div-para-uso-do-style-' + divId;
                var style = document.getElementById(elementoId).style;

                if (style.position == null || style.position == undefined || style.position == '') {
                    style.position = 'absolute';
                }

                if (style.fontSize == null || style.fontSize == undefined || style.fontSize == '') {
                    style.fontSize = '12px';
                }

                if (style.width == null || style.width == undefined || style.width == '') {
                    style.width = '300px';
                }

                if (style.textAlign == null || style.textAlign == undefined || style.textAlign == '') {
                    style.textAlign = 'justify';
                }

                style.whiteSpace = 'normal';
                style.zIndex = 10000;
                definirPosicionamento(botao, style);

                return style;
            }

            function criarDivNotificacao(botao, divId, gravidade, titulo, detalhes) {
                var novaDiv = document.getElementById(divId + '_div');
                if (novaDiv != null) {
                    novaDiv.parentNode.removeChild(novaDiv);
                    novaDiv = null;
                }

                var style = tratarStyleCSS(botao, divId);
                novaDiv = criarNovaDiv(divId, gravidade, titulo, detalhes, style);
                document.body.appendChild(novaDiv);
                document.addEventListener("click", function(evt) {
                    ocultarDiv(novaDiv.id);
                }, true);
                mostrarOcultarDiv(novaDiv.id);
            }

            function mostrarOcultarDiv(arg) {
                if (document.getElementById(arg).style.display == "block") {
                    ocultarDiv(arg);
                } else {
                    mostrarDiv(arg);
                }
            }

            function mostrarDiv(arg) {
                document.getElementById(arg).style.display = "block";
            }

            function ocultarDiv(arg) {
                document.getElementById(arg).style.display = "none";
            }
        </script>
        <div id="div-para-uso-do-style-#{cc.attrs.id}" style="#{cc.attrs.styleInfo}" class="invisivel" />
        <p:outputPanel id="#{cc.attrs.id}">
        <p:commandButton icon="#{cc.attrs.icon}" styleClass="vinteLarguraVinteAltura #{cc.attrs.styleClassBotao}" title="#{cc.attrs.title}"
                         tabindex="-1"
                         disabled="#{cc.attrs.disabled}"
                         rendered="#{cc.attrs.rendered}"
                         style="#{cc.attrs.styleButton}"
                         onclick="criarDivNotificacao(this,
                        '#{cc.attrs.id}',
                        '#{cc.attrs.gravidade}',
                        '#{cc.attrs.resumo}',
                        '#{cc.attrs.detalhes}');"/>
        </p:outputPanel>
    </cc:implementation>
</html>
