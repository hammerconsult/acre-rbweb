package br.com.webpublico.controle.contabil;

import br.com.webpublico.entidades.TipoContaAuxiliar;
import br.com.webpublico.enums.ClassificacaoContaAuxiliar;
import br.com.webpublico.exception.ValidacaoException;
import br.com.webpublico.negocios.GeradorContaAuxiliarFacade;
import br.com.webpublico.util.FacesUtil;
import com.ocpsoft.pretty.faces.annotation.URLAction;
import com.ocpsoft.pretty.faces.annotation.URLMapping;
import com.ocpsoft.pretty.faces.annotation.URLMappings;

import javax.ejb.EJB;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.ViewScoped;
import java.util.List;

@ManagedBean
@ViewScoped
@URLMappings(mappings = {
    @URLMapping(id = "novo-gerador-conta-auxiliar", pattern = "/gerador-conta-auxiliar/", viewId = "/faces/financeiro/gerador-conta-auxiliar.xhtml")
})
public class GeradorContaAuxiliarControlador {

    @EJB
    private GeradorContaAuxiliarFacade facade;
    private TipoContaAuxiliar tipoContaAuxiliar;
    private String sql;


    @URLAction(mappingId = "novo-gerador-conta-auxiliar", phaseId = URLAction.PhaseId.RENDER_RESPONSE, onPostback = false)
    public void novo() {
        sql = "";
        tipoContaAuxiliar = null;
    }

    public List<TipoContaAuxiliar> completarTiposDeContaAuxiliar(String filtro) {
        return facade.getTipoContaAuxiliarFacade().listaTodos(filtro, ClassificacaoContaAuxiliar.SICONFI);
    }

    public void gerar() {
        try {
            validarCampos();
            facade.gerarContasAuxiliares(tipoContaAuxiliar, sql);
            FacesUtil.addOperacaoRealizada("Contas Auxiliares de Transporte geradas com sucesso!");
        } catch (ValidacaoException ve) {
            FacesUtil.printAllFacesMessages(ve.getMensagens());
        } catch (Exception ex) {
            FacesUtil.addOperacaoNaoRealizada(ex.getMessage());
        }
    }

    private void validarCampos() {
        ValidacaoException ve = new ValidacaoException();
        if (tipoContaAuxiliar == null) {
            ve.adicionarMensagemDeCampoObrigatorio("O campo Tipo Conta Auxiliar deve ser informado!");
        }
        if (sql.isEmpty()) {
            ve.adicionarMensagemDeCampoObrigatorio("O campo SQL deve ser informado!");
        }
        ve.lancarException();
    }


    public void sugerirSql() {
        sql = "";
        if (tipoContaAuxiliar != null) {
            switch (tipoContaAuxiliar.getCodigo()) {
                case "91":
                    sql = sugestaoSqlTipoContaAuxiliar91();
                    break;
                case "92":
                    sql = sugestaoSqlTipoContaAuxiliar92();
                    break;
                case "93":
                    sql = sugestaoSqlTipoContaAuxiliar93();
                    break;
                case "94":
                    sql = sugestaoSqlTipoContaAuxiliar94();
                    break;
                case "95":
                    sql = sugestaoSqlTipoContaAuxiliar95();
                    break;
                case "96":
                    sql = sugestaoSqlTipoContaAuxiliar96();
                    break;
                case "97":
                    sql = sugestaoSqlTipoContaAuxiliar97();
                    break;
                case "98":
                    sql = sugestaoSqlTipoContaAuxiliar98();
                    break;
                case "99":
                    sql = sugestaoSqlTipoContaAuxiliar99();
                    break;
            }
        }
    }

    private String sugestaoSqlTipoContaAuxiliar91() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select c.id as contaId, s.unidadeorganizacional_id as unidadeId, s.totalcredito - s.totaldebito as valor from SALDOCONTACONTABIL s ")
            .append("   inner join conta c on s.CONTACONTABIL_ID = c.id ")
            .append(" where ")
            .append("   c.codigo in ( ")
            .append("     '2.3.1.2.1.01.00', ")
            .append("     '2.3.6.1.1.98.00', ")
            .append("     '2.3.7.1.1.01.00', ")
            .append("     '2.3.7.1.1.02.00', ")
            .append("     '2.3.7.1.1.03.01', ")
            .append("     '2.3.7.1.1.03.02', ")
            .append("     '2.3.7.2.1.01.00', ")
            .append("     '2.3.7.2.1.02.00', ")
            .append("     '7.1.1.2.1.01.01', ")
            .append("     '7.1.2.2.1.01.01', ")
            .append("     '7.9.1.1.9.00.00', ")
            .append("     '7.9.1.2.9.00.00', ")
            .append("     '8.1.1.2.1.01.01', ")
            .append("     '8.1.2.2.1.01.01', ")
            .append("     '8.9.1.1.9.00.00', ")
            .append("     '8.9.1.2.9.00.00' ")
            .append("   ) ")
            .append("   and ")
            .append("   s.TIPOBALANCETE = 'TRANSPORTE' ")
            .append("   and trunc(s.DATASALDO) >= to_date('01/01/2019','dd/MM/yyyy') ")
            .append("   and s.totalcredito - s.totaldebito <> 0 ")
            .append(" order by c.codigo ");
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar92() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select c.id as contaId, s.unidadeorganizacional_id as unidadeId, s.totalcredito - s.totaldebito as valor from SALDOCONTACONTABIL s ")
            .append(" inner join conta c on s.CONTACONTABIL_ID = c.id ")
            .append(" where ")
            .append(" c.codigo in ( ")
            .append("     '1.1.2.5.1.01.05', ")
            .append("     '1.1.2.5.1.01.07', ")
            .append("     '1.1.2.5.1.02.01', ")
            .append("     '1.1.2.6.1.99.00', ")
            .append("     '1.1.3.1.1.99.00', ")
            .append("     '1.1.3.8.1.99.00', ")
            .append("     '1.1.5.6.1.01.00', ")
            .append("     '1.2.1.1.1.02.01', ")
            .append("     '1.2.1.2.1.98.99', ")
            .append("     '1.2.2.7.1.99.00', ")
            .append("     '1.2.3.1.1.01.01', ")
            .append("     '1.2.3.1.1.01.02', ")
            .append("     '1.2.3.1.1.01.03', ")
            .append("     '1.2.3.1.1.01.04', ")
            .append("     '1.2.3.1.1.01.05', ")
            .append("     '1.2.3.1.1.01.06', ")
            .append("     '1.2.3.1.1.01.07', ")
            .append("     '1.2.3.1.1.01.08', ")
            .append("     '1.2.3.1.1.01.09', ")
            .append("     '1.2.3.1.1.01.12', ")
            .append("     '1.2.3.1.1.01.17', ")
            .append("     '1.2.3.1.1.01.18', ")
            .append("     '1.2.3.1.1.01.19', ")
            .append("     '1.2.3.1.1.01.21', ")
            .append("     '1.2.3.1.1.02.01', ")
            .append("     '1.2.3.1.1.03.01', ")
            .append("     '1.2.3.1.1.03.02', ")
            .append("     '1.2.3.1.1.03.03', ")
            .append("     '1.2.3.1.1.03.04', ")
            .append("     '1.2.3.1.1.04.01', ")
            .append("     '1.2.3.1.1.04.02', ")
            .append("     '1.2.3.1.1.04.04', ")
            .append("     '1.2.3.1.1.04.05', ")
            .append("     '1.2.3.1.1.04.06', ")
            .append("     '1.2.3.1.1.05.01', ")
            .append("     '1.2.3.1.1.05.02', ")
            .append("     '1.2.3.1.1.05.03', ")
            .append("     '1.2.3.1.1.05.06', ")
            .append("     '1.2.3.1.1.09.00', ")
            .append("     '1.2.3.1.1.99.08', ")
            .append("     '1.2.3.1.1.99.99', ")
            .append("     '1.2.3.2.1.01.01', ")
            .append("     '1.2.3.2.1.01.02', ")
            .append("     '1.2.3.2.1.01.03', ")
            .append("     '1.2.3.2.1.01.06', ")
            .append("     '1.2.3.2.1.01.11', ")
            .append("     '1.2.3.2.1.01.12', ")
            .append("     '1.2.3.2.1.01.14', ")
            .append("     '1.2.3.2.1.01.99', ")
            .append("     '1.2.3.2.1.05.01', ")
            .append("     '1.2.3.2.1.05.02', ")
            .append("     '1.2.3.2.1.05.04', ")
            .append("     '1.2.3.2.1.05.06', ")
            .append("     '1.2.3.2.1.05.51', ")
            .append("     '1.2.3.2.1.05.53', ")
            .append("     '1.2.3.2.1.05.99', ")
            .append("     '1.2.3.2.1.91.01', ")
            .append("     '1.2.3.2.1.91.03', ")
            .append("     '1.2.3.2.1.91.07', ")
            .append("     '1.2.3.2.1.93.00', ")
            .append("     '1.2.3.2.1.95.00', ")
            .append("     '1.2.3.2.1.99.99', ")
            .append("     '1.2.3.8.1.01.99', ")
            .append("     '1.2.3.8.1.02.99', ")
            .append("     '1.2.3.8.1.06.99', ")
            .append("     '1.2.4.1.1.99.00', ")
            .append("     '2.2.7.2.1.01.01', ")
            .append("     '2.2.7.2.1.01.03', ")
            .append("     '2.2.7.2.1.01.04', ")
            .append("     '2.2.7.2.1.01.05', ")
            .append("     '2.2.7.2.1.01.07', ")
            .append("     '2.2.7.2.1.02.01', ")
            .append("     '2.2.7.2.1.02.02', ")
            .append("     '2.2.7.2.1.02.03', ")
            .append("     '2.2.7.2.1.02.04', ")
            .append("     '2.2.7.2.1.02.06', ")
            .append("     '2.2.7.2.1.03.01', ")
            .append("     '2.2.7.2.1.03.03', ")
            .append("     '2.2.7.2.1.03.04', ")
            .append("     '2.2.7.2.1.03.05', ")
            .append("     '2.2.7.2.1.04.01', ")
            .append("     '2.2.7.2.1.04.02', ")
            .append("     '2.2.7.2.1.04.03', ")
            .append("     '2.2.7.2.1.04.04', ")
            .append("     '2.2.7.2.1.05.98') ")
            .append(" and ")
            .append(" s.TIPOBALANCETE = 'TRANSPORTE' ")
            .append(" and trunc(s.DATASALDO) >= to_date('01/01/2019','dd/MM/yyyy') ")
            .append(" and s.totalcredito - s.totaldebito <> 0 ")
            .append(" order by c.codigo ");
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar93() {
        StringBuilder sql = new StringBuilder();

        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar94() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, sum(s.TOTALDEBITO - s.TOTALCREDITO) as valor, s.FONTEDERECURSOS_ID as fonteId from SALDOSUBCONTA s ")
            .append(" inner join OCCBANCO ocb on ocb.SUBCONTA_ID = s.SUBCONTA_ID ")
            .append(" inner join ORIGEMCONTACONTABIL o on ocb.id = o.id ")
            .append(" inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append(" where trunc(s.DATASALDO) = to_date('01/01/2019','dd/MM/yyyy') ")
            .append(" and (s.TOTALDEBITO - s.TOTALCREDITO) <> 0 ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" group by s.FONTEDERECURSOS_ID, s.UNIDADEORGANIZACIONAL_ID, c.id ")
            .append(" union all ")
            .append(" select o.CONTACONTABIL_ID as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, s.valor, s.FONTEDERECURSOS_ID as fonteId from SALDOEXTRAORCAMENTARIO s ")
            .append(" inner join occconta occ on s.CONTAEXTRAORCAMENTARIA_ID = occ.CONTAORIGEM_ID ")
            .append(" inner join origemcontacontabil o on occ.id = o.id ")
            .append(" where trunc(s.DATASALDO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" union all ")
            .append(" select (select c.id from conta c ")
            .append("         where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("          and c.codigo like '2.1.1.1.1.01.17') as contaId, ")
            .append("        obr.UNIDADEORGANIZACIONAL_ID as unidadeId, obr.valor as valor, fr.id as fonteIdz ")
            .append("   from obrigacaoapagar obr ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON obr.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  where obr.TRANSPORTADO = 1 ")
            .append("   and trunc(obr.DATALANCAMENTO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" union all ")
            .append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '2.1.1.4.2.04.02') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" emp.valor, ")
            .append(" fr.id as fonteId ")
            .append("  from empenho emp ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append(" and contaDespesa.codigo like '3.1.91.13%' ")
            .append(" union all ")
            .append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '2.1.1.4.3.01.02') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" desd.valor, ")
            .append(" fr.id as fonteId ")
            .append("  from empenho emp ")
            .append(" inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append(" inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append(" inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append(" and contaDespesa.CODIGO like '3.1.90.13%' and contaDesdobramento.CODIGO not like '3.1.90.13.03%' ")
            .append(" union all ")
            .append("  select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.1.4.3.01.05') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDesdobramento.CODIGO in ('3.3.90.47.18.00.00','3.3.50.41.99.00.00') ")
            .append("  union all ")
            .append(" select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.1.4.3.04.05') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDesdobramento.CODIGO like '3.1.90.13.03%' ")
            .append("  union all ")
            .append(" select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.3.1.1.01.02') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDespesa.CODIGO in ('3.3.90.30.00.00.00','3.3.90.32.00.00.00','3.3.90.36.00.00.00','3.3.90.39.00.00.00','4.4.90.52.00.00.00','4.4.90.51.00.00.00','4.4.90.30.00.00.00','4.4.90.39.00.00.00') ")
            .append("  union all ")
            .append(" select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.3.1.1.01.02') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDesdobramento.CODIGO in ('3.3.90.04.99.00.00', '4.4.90.92.52.24.00') ")
            .append(" union all ")
            .append(" select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.8.9.1.01.05') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDespesa.CODIGO in ('4.4.90.93.00.00.00','3.3.90.93.00.00.00') ")
            .append(" union all ")
            .append(" select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.8.9.1.99.02') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDespesa.CODIGO in ('3.3.50.41.00.00.00','3.3.90.31.00.00.00') ")
            .append("  union all ")
            .append("  select ")
            .append("  (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '2.1.8.9.1.99.02') as contaId, ")
            .append("  emp.unidadeorganizacional_id as unidadeId, ")
            .append("  desd.valor * -1, ")
            .append("  fr.id as fonteId ")
            .append("   from empenho emp ")
            .append("  inner join liquidacao liq on liq.empenho_id = emp.id ")
            .append("  inner join desdobramento desd on liq.id = desd.liquidacao_id ")
            .append("  inner join conta contaDesdobramento on desd.CONTA_ID = contaDesdobramento.id ")
            .append("  INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append("  INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append("  INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append("  INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append("  INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append("  INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append("  INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append("  inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append("  inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append("  inner join funcao func on acao.funcao_id = func.id ")
            .append("  inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append("  inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  and contaDesdobramento.CODIGO in ('3.3.50.41.99.00.00') ")
            .append(" union all ")
            .append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append(" (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) as valor, ")
            .append(" s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id and origem.TAGOCC_ID = 84780248 ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0) <> 0 ")
            .append(" and c.codigo in ('2.2.1.1.1.03.02', '2.2.2.1.3.02.99', '2.2.2.3.3.02.99', '2.2.3.1.1.04.02', '2.2.3.1.1.06.02') ")
            .append(" union all ")
            .append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("       (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("       - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) * - 1 as valor, ")
            .append("       s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("                           - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) <> 0 ")
            .append("  and origem.TAGOCC_ID in (84780248) ")
            .append(" and c.codigo in ('2.2.1.1.1.03.02', '2.2.2.1.3.02.99', '2.2.2.3.3.02.99', '2.2.3.1.1.04.02', '2.2.3.1.1.06.02') ")
            .append("  and s.intervalo = 'CURTO_PRAZO' ")
            .append(" union all ")
            .append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("       (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("       - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) as valor, ")
            .append("       s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("                           - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) <> 0 ")
            .append("  and origem.TAGOCC_ID in (84780280) ")
            .append("  and c.codigo in ('2.1.2.1.3.02.01', '2.1.3.1.1.03.01', '2.1.8.9.3.12.01') ")
            .append("  and s.intervalo = 'CURTO_PRAZO' ");
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar95() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select contaid, unidadeid, sum(valor) * - 1 as valor, fonteid from ( ")
            .append(" select (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '7.2.1.1.1.00.00') as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, sum(s.TOTALDEBITO - s.TOTALCREDITO) as valor, s.FONTEDERECURSOS_ID as fonteId from SALDOSUBCONTA s ")
            .append(" inner join OCCBANCO ocb on ocb.SUBCONTA_ID = s.SUBCONTA_ID ")
            .append(" inner join ORIGEMCONTACONTABIL o on ocb.id = o.id ")
            .append(" inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append(" where trunc(s.DATASALDO) = to_date('01/01/2019','dd/MM/yyyy') ")
            .append(" and (s.TOTALDEBITO - s.TOTALCREDITO) <> 0 ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" group by s.FONTEDERECURSOS_ID, s.UNIDADEORGANIZACIONAL_ID, c.id ")
            .append(" union all ")
            .append(" select (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '8.2.1.1.3.02.00') as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, s.valor, s.FONTEDERECURSOS_ID as fonteId from SALDOEXTRAORCAMENTARIO s ")
            .append(" inner join occconta occ on s.CONTAEXTRAORCAMENTARIA_ID = occ.CONTAORIGEM_ID ")
            .append(" inner join origemcontacontabil o on occ.id = o.id ")
            .append(" inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append(" where trunc(s.DATASALDO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and c.codigo like '2.1.8.8.1.01.%' ")
            .append(" union all ")
            .append(" select (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '8.2.1.1.3.03.00') as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, s.valor, s.FONTEDERECURSOS_ID as fonteId from SALDOEXTRAORCAMENTARIO s ")
            .append(" inner join occconta occ on s.CONTAEXTRAORCAMENTARIA_ID = occ.CONTAORIGEM_ID ")
            .append(" inner join origemcontacontabil o on occ.id = o.id ")
            .append(" inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append(" where trunc(s.DATASALDO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and (c.codigo like '2.1.8.8.1.02.%' or c.codigo like '2.1.8.8.1.03.%' or c.codigo like '2.1.8.8.1.04.%' or c.codigo like '2.1.8.8.1.99.%') ")
            .append(" union all ")
            .append(" select (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '8.2.1.1.2.01.00') as contaId, ")
            .append(" emp.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append(" emp.valor, ")
            .append(" font.id as fonteId ")
            .append(" from empenho emp ")
            .append(" INNER JOIN fontedespesaorc fdo ON emp.fontedespesaorc_id = fdo.id ")
            .append(" INNER JOIN provisaoppafonte ppf ON fdo.provisaoppafonte_id = ppf.id ")
            .append(" INNER JOIN contadedestinacao cd ON ppf.DESTINACAODERECURSOS_ID = cd.id ")
            .append(" INNER JOIN fontederecursos FONT ON cd.fontederecursos_id = FONT.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'NAO_PROCESSADOS' ")
            .append(" union all ")
            .append(" select (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '8.2.1.1.3.01.00') as contaId, ")
            .append(" emp.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append(" emp.valor, ")
            .append(" font.id as fonteId ")
            .append(" from empenho emp ")
            .append(" INNER JOIN fontedespesaorc fdo ON emp.fontedespesaorc_id = fdo.id ")
            .append(" INNER JOIN provisaoppafonte ppf ON fdo.provisaoppafonte_id = ppf.id ")
            .append(" INNER JOIN contadedestinacao cd ON ppf.DESTINACAODERECURSOS_ID = cd.id ")
            .append(" INNER JOIN fontederecursos FONT ON cd.fontederecursos_id = FONT.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append(" union all ")
            .append("   select (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '8.2.1.1.1.01.00') as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, sum(s.TOTALDEBITO - s.TOTALCREDITO) as valor, s.FONTEDERECURSOS_ID as fonteId from SALDOSUBCONTA s ")
            .append("   inner join OCCBANCO ocb on ocb.SUBCONTA_ID = s.SUBCONTA_ID ")
            .append("   inner join ORIGEMCONTACONTABIL o on ocb.id = o.id ")
            .append("   inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append("   where trunc(s.DATASALDO) = to_date('01/01/2019','dd/MM/yyyy') ")
            .append("   and (s.TOTALDEBITO - s.TOTALCREDITO) <> 0 ")
            .append("   and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append("   group by s.FONTEDERECURSOS_ID, s.UNIDADEORGANIZACIONAL_ID, c.id ")
            .append("  union all ")
            .append(" ")
            .append("  select (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '8.2.1.1.1.01.00') as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, s.valor  as valor, s.FONTEDERECURSOS_ID as fonteId from SALDOEXTRAORCAMENTARIO s ")
            .append("  inner join occconta occ on s.CONTAEXTRAORCAMENTARIA_ID = occ.CONTAORIGEM_ID ")
            .append("  inner join origemcontacontabil o on occ.id = o.id ")
            .append("  inner join conta c on o.CONTACONTABIL_ID = c.id ")
            .append("  where trunc(s.DATASALDO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and to_date('01/01/2019', 'dd/mm/yyyy') between o.INICIOVIGENCIA and coalesce(o.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append("  and (c.codigo like '2.1.8.8.1.01.%' or c.codigo like '2.1.8.8.1.02.%' or c.codigo like '2.1.8.8.1.03.%' or c.codigo like '2.1.8.8.1.04.%' or c.codigo like '2.1.8.8.1.99.%') ")
            .append("  union all ")
            .append("  select (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '8.2.1.1.1.01.00') as contaId, ")
            .append("  emp.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("  emp.valor as valor, ")
            .append("  font.id as fonteId ")
            .append("  from empenho emp ")
            .append("  INNER JOIN fontedespesaorc fdo ON emp.fontedespesaorc_id = fdo.id ")
            .append("  INNER JOIN provisaoppafonte ppf ON fdo.provisaoppafonte_id = ppf.id ")
            .append("  INNER JOIN contadedestinacao cd ON ppf.DESTINACAODERECURSOS_ID = cd.id ")
            .append("  INNER JOIN fontederecursos FONT ON cd.fontederecursos_id = FONT.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'NAO_PROCESSADOS' ")
            .append("  union all ")
            .append("  select (select c.id from conta c ")
            .append("  where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("  and c.codigo like '8.2.1.1.1.01.00') as contaId, ")
            .append("  emp.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("  emp.valor  as valor, ")
            .append("  font.id as fonteId ")
            .append("  from empenho emp ")
            .append("  INNER JOIN fontedespesaorc fdo ON emp.fontedespesaorc_id = fdo.id ")
            .append("  INNER JOIN provisaoppafonte ppf ON fdo.provisaoppafonte_id = ppf.id ")
            .append("  INNER JOIN contadedestinacao cd ON ppf.DESTINACAODERECURSOS_ID = cd.id ")
            .append("  INNER JOIN fontederecursos FONT ON cd.fontederecursos_id = FONT.id ")
            .append("  where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append("  and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append("  ) group by contaid, unidadeid, fonteid ");
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar96() {
        StringBuilder sql = new StringBuilder();
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar97() {
        StringBuilder sql = new StringBuilder();
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar98() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append(" (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) as valor, ")
            .append(" s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id and origem.TAGOCC_ID = 84780248 ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0) <> 0 ")
            .append(" and c.codigo in ('2.2.1.4.3.01.01', '2.2.4.1.3.02.00', '2.2.8.9.3.12.01') ")
            .append(" union all ")
            .append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("       (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("       - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) * - 1 as valor, ")
            .append("       s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("                           - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) <> 0 ")
            .append(" and origem.TAGOCC_ID in (84780248) ")
            .append(" and c.codigo in ('2.2.1.4.3.01.01', '2.2.4.1.3.02.00', '2.2.8.9.3.12.01') ")
            .append(" and s.intervalo = 'CURTO_PRAZO' ")
            .append(" union all ")
            .append(" select c.id as contaId, s.UNIDADEORGANIZACIONAL_ID as unidadeId, ")
            .append("       (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("       - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) as valor, ")
            .append("       s.FONTEDERECURSOS_ID as fonteId ")
            .append(" from saldodividapublica s ")
            .append(" inner join dividapublica div on s.DIVIDAPUBLICA_ID = div.id ")
            .append(" inner join CATEGORIADIVIDAPUBLICA cat on div.CATEGORIADIVIDAPUBLICA_ID = cat.id ")
            .append(" inner join OCCNATUREZADIVIDAPUBLICA  occ on cat.id = occ.CATEGORIADIVIDAPUBLICA_ID ")
            .append(" inner join origemcontacontabil origem on occ.id= origem.id ")
            .append(" inner join conta c on origem.CONTACONTABIL_ID = c.id ")
            .append(" INNER JOIN ")
            .append("     (SELECT MAX(trunc(sld.data)) AS maiorData, ")
            .append("       sld.dividapublica_id, ")
            .append("       sld.unidadeorganizacional_id AS unidade, ")
            .append("       sld.fontederecursos_id as fonte, ")
            .append("       sld.intervalo ")
            .append("     FROM SALDODIVIDAPUBLICA sld ")
            .append("    inner join FONTEDERECURSOS fr on sld.fontederecursos_id = fr.id ")
            .append("     WHERE trunc(sld.data) = to_date('01/01/2019','dd/mm/yyyy') ")
            .append("       and fr.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append("     GROUP BY sld.dividapublica_id , ")
            .append("       sld.unidadeorganizacional_id, ")
            .append("       sld.fontederecursos_id, ")
            .append("       sld.intervalo ")
            .append("     ) reg ")
            .append("   ON trunc(s.data) = trunc(reg.maiordata) ")
            .append("   AND s.dividapublica_id = reg.dividapublica_id ")
            .append("   AND s.unidadeorganizacional_id = reg.unidade ")
            .append("   and s.fontederecursos_id = reg.fonte ")
            .append("   and s.intervalo = reg.intervalo ")
            .append(" where trunc(s.DATA) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and to_date('01/01/2019', 'dd/mm/yyyy') between origem.INICIOVIGENCIA and coalesce(origem.FIMVIGENCIA, to_date('01/01/2019', 'dd/mm/yyyy')) ")
            .append(" and (coalesce(s.inscricao, 0) + coalesce(s.atualizacao, 0) + coalesce(s.receita, 0) + coalesce(s.transferenciacredito, 0) ")
            .append("                           - coalesce(transferenciadebito, 0) - coalesce(s.apropriacao, 0) - coalesce(s.pagamento, 0) - coalesce(s.cancelamento, 0)) <> 0 ")
            .append(" and origem.TAGOCC_ID in (84780280) ")
            .append(" and c.codigo in ('2.1.1.4.3.01.07', '2.1.2.3.3.02.01', '2.1.4.1.3.12.01') ")
            .append(" and s.intervalo = 'CURTO_PRAZO' ");
        return sql.toString();
    }

    private String sugestaoSqlTipoContaAuxiliar99() {
        StringBuilder sql = new StringBuilder();
        sql.append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '5.3.1.7.0.00.00') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" emp.valor, ")
            .append(" fr.id as fonteId, ")
            .append(" func.id as funcaoId, ")
            .append(" subfunc.id as subfuncaoId, ")
            .append(" contaDespesa.id as contaDespesa, ")
            .append(" emp.extensaoFonteRecurso_id as extensao, ")
            .append(" ex.ano as exercicio ")
            .append("  from empenho emp ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'NAO_PROCESSADOS' ")
            .append(" ")
            .append(" union all ")
            .append(" ")
            .append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '5.3.2.7.0.00.00') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" emp.valor, ")
            .append(" fr.id as fonteId, ")
            .append(" func.id as funcaoId, ")
            .append(" subfunc.id as subfuncaoId, ")
            .append(" contaDespesa.id as contaDespesa, ")
            .append(" emp.extensaoFonteRecurso_id as extensao, ")
            .append(" ex.ano as exercicio ")
            .append("  from empenho emp ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ")
            .append(" ")
            .append(" union all ")
            .append(" ")
            .append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '6.3.1.7.1.00.00') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" emp.valor, ")
            .append(" fr.id as fonteId, ")
            .append(" func.id as funcaoId, ")
            .append(" subfunc.id as subfuncaoId, ")
            .append(" contaDespesa.id as contaDespesa, ")
            .append(" emp.extensaoFonteRecurso_id as extensao, ")
            .append(" ex.ano as exercicio ")
            .append("  from empenho emp ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'NAO_PROCESSADOS' ")
            .append(" ")
            .append(" union all ")
            .append(" ")
            .append(" select ")
            .append(" (select c.id from conta c ")
            .append(" where c.exercicio_id = (select id from exercicio where ano = 2019) ")
            .append(" and c.codigo like '6.3.2.7.0.00.00') as contaId, ")
            .append(" emp.unidadeorganizacional_id as unidadeId, ")
            .append(" emp.valor, ")
            .append(" fr.id as fonteId, ")
            .append(" func.id as funcaoId, ")
            .append(" subfunc.id as subfuncaoId, ")
            .append(" contaDespesa.id as contaDespesa, ")
            .append(" emp.extensaoFonteRecurso_id as extensao, ")
            .append(" ex.ano as exercicio ")
            .append("  from empenho emp ")
            .append(" INNER JOIN FONTEDESPESAORC FO  ON emp.FONTEDESPESAORC_ID = FO.ID ")
            .append(" INNER JOIN PROVISAOPPAFONTE PFONTE  ON FO.PROVISAOPPAFONTE_ID = PFONTE.ID ")
            .append(" INNER JOIN CONTADEDESTINACAO CD  ON PFONTE.DESTINACAODERECURSOS_ID = CD.ID ")
            .append(" INNER JOIN FONTEDERECURSOS fr  ON CD.FONTEDERECURSOS_ID = fr.ID ")
            .append(" INNER JOIN DESPESAORC DESP  ON emp.DESPESAORC_ID = DESP.ID ")
            .append(" INNER JOIN PROVISAOPPADESPESA PROV  ON DESP.PROVISAOPPADESPESA_ID = PROV.ID ")
            .append(" INNER JOIN CONTA contaDespesa  ON PROV.CONTADEDESPESA_ID = contaDespesa.ID ")
            .append(" inner join SubAcaoPPA  sub on PROV.SUBACAOPPA_ID = sub.id ")
            .append(" inner join acaoppa acao on sub.acaoppa_id = acao.id ")
            .append(" inner join funcao func on acao.funcao_id = func.id ")
            .append(" inner join subfuncao subfunc on acao.subfuncao_id = subfunc.id ")
            .append(" inner join exercicio ex on emp.exercicio_id = ex.id ")
            .append(" where trunc(emp.DATAEMPENHO) = to_date('01/01/2019', 'dd/mm/yyyy') ")
            .append(" and emp.TIPORESTOSPROCESSADOS = 'PROCESSADOS' ");
        return sql.toString();
    }

    public TipoContaAuxiliar getTipoContaAuxiliar() {
        return tipoContaAuxiliar;
    }

    public void setTipoContaAuxiliar(TipoContaAuxiliar tipoContaAuxiliar) {
        this.tipoContaAuxiliar = tipoContaAuxiliar;
    }

    public String getSql() {
        return sql;
    }

    public void setSql(String sql) {
        this.sql = sql;
    }
}
