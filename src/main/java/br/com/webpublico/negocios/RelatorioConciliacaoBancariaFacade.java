package br.com.webpublico.negocios;

import br.com.webpublico.entidadesauxiliares.ConciliacaoBancariaConstante;
import br.com.webpublico.entidadesauxiliares.ConciliacaoBancariaItem;
import br.com.webpublico.entidadesauxiliares.ConciliacaoBancariaMovimentos;
import br.com.webpublico.entidadesauxiliares.ParametrosRelatorios;
import br.com.webpublico.enums.OperacaoReceita;
import br.com.webpublico.enums.TipoAjusteDisponivel;
import br.com.webpublico.relatoriofacade.AbstractRelatorioConciliacaoBancariaFacade;
import br.com.webpublico.util.DataUtil;
import br.com.webpublico.util.UtilRelatorioContabil;
import com.google.common.collect.Lists;
import org.jboss.ejb3.annotation.TransactionTimeout;

import javax.ejb.Stateless;
import javax.ejb.TransactionAttribute;
import javax.ejb.TransactionAttributeType;
import javax.persistence.Query;
import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.concurrent.TimeUnit;

/**
 * Created by Edi on 13/10/2014.
 */
@Stateless
@TransactionAttribute(TransactionAttributeType.REQUIRES_NEW)
public class RelatorioConciliacaoBancariaFacade extends AbstractRelatorioConciliacaoBancariaFacade implements Serializable {

    @TransactionTimeout(value = 1, unit = TimeUnit.HOURS)
    @Override
    public ConciliacaoBancariaItem gerarConsultaSaldo(Boolean pesquisouUg, List<ParametrosRelatorios> parametros, String dataSaldoAnterior, HashMap parametrosItens, ConciliacaoBancariaItem item) {
        StringBuilder query = new StringBuilder();
        query.append(" select coalesce(sum(ssb.totaldebito - ssb.totalcredito), 0) as saldocontabil ")
            .append(" FROM SALDOSUBCONTA SSB ")
            .append(" inner join subconta sub on ssb.subconta_id = sub.id ")
            .append(" inner join contabancariaentidade cbe on sub.contabancariaentidade_id = cbe.id ")
            .append(" inner join fontederecursos font on ssb.fontederecursos_id = font.id ")
            .append(" inner join vwhierarquiaorcamentaria vw on ssb.unidadeorganizacional_id  = vw.subordinada_id  ")
            .append(pesquisouUg ? " inner join UGESTORAUORGANIZACIONAL UgUnidade on vw.subordinada_id = ugunidade.unidadeorganizacional_id  inner join unidadegestora ug on ugunidade.unidadegestora_id = ug.id and ug.exercicio_id = :EXERCICIO_ID " : "")
            .append(" inner join (select trunc(max(datasaldo)) as datasaldo, subconta_id, fontederecursos_id, unidadeorganizacional_id ")
            .append("               from saldosubconta ")
            .append(dataSaldoAnterior)
            .append("           group by subconta_id, fontederecursos_id, unidadeorganizacional_id) dataSaldo on dataSaldo.subconta_id = ssb.subconta_id ")
            .append("       and trunc(ssb.datasaldo) = trunc(dataSaldo.datasaldo) ")
            .append("       and ssb.fontederecursos_id = dataSaldo.fontedeRecursos_id ")
            .append("       and ssb.unidadeorganizacional_id = datasaldo.unidadeorganizacional_id ")
            .append(" where cbe.id = :CBE_ID ")
            .append(" and sub.id = :SUB_ID ")
            .append(" and ssb.unidadeorganizacional_id = :UNIDADE_ID ")
            .append(" and trunc(ssb.datasaldo) <= to_date(:DATAREFERENCIA, 'dd/mm/yyyy') ")
            .append(" and font.exercicio_id = :EXERCICIO_ID ")
            .append(" and to_date(:DATAREFERENCIA, 'dd/mm/yyyy') between vw.iniciovigencia and coalesce(vw.fimvigencia, to_date(:DATAREFERENCIA, 'dd/mm/yyyy')) ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 3, " and "))
            .append(" group by cbe.id ");
        Query q = getEm().createNativeQuery(query.toString());
        UtilRelatorioContabil.adicionarParametrosRetirandoLocais(parametros, q, 2, 4);
        q.setParameter("CBE_ID", parametrosItens.get("CBE_ID"));
        q.setParameter("SUB_ID", parametrosItens.get("SUB_ID"));
        q.setParameter("UNIDADE_ID", parametrosItens.get("UNIDADE_ID"));
        if (!q.getResultList().isEmpty()) {
            item.setSaldoContabil((BigDecimal) q.getSingleResult());
            return item;
        } else {
            item.setSaldoContabil(BigDecimal.ZERO);
        }
        return item;
    }

    @TransactionTimeout(value = 1, unit = TimeUnit.HOURS)
    @Override
    public List<ConciliacaoBancariaItem> buscarRelatorio(List<ParametrosRelatorios> parametros, Boolean pesquisouUg, String dataSaldoAnterior, Boolean movimentosDiferenteZero) {
        StringBuilder sql = new StringBuilder();
        sql.append(" select  b.NUMEROBANCO || ' - '  || b.DESCRICAO AS BANCO, ")
            .append("   ag.NUMEROAGENCIA  || ' - '  || ag.DIGITOVERIFICADOR ||' - '  || ag.NOMEAGENCIA AS AGENCIA, ")
            .append("   CBE.NUMEROCONTA || ' - ' || CBE.DIGITOVERIFICADOR AS NUMEROCONTA, ")
            .append("   CBE.NOMECONTA AS TITULOCONTA, ")
            .append("   CBE.TIPOCONTABANCARIA AS TIPOCONTA, ")
            .append("   VW.CODIGO || ' - ' || VW.DESCRICAO AS UNIDADE, ")
            .append("   VWORG.CODIGO || ' - ' || VWORG.DESCRICAO AS ORGAO, ")
            .append("   SUB.CODIGO || ' - ' || SUB.DESCRICAO AS SUBCONTA, ")
            .append("   CBE.ID AS CONTABANCARIA_ID, ")
            .append("   SUB.ID AS sub_id, ")
            .append("   VW.SUBORDINADA_ID AS vw_id ")
            .append("   from subconta sub ")
            .append("  inner join contabancariaentidade cbe on sub.contabancariaentidade_id = cbe.id ")
            .append("  inner join agencia ag on cbe.agencia_id = ag.id ")
            .append("  inner join banco b on ag.banco_id = b.id ")
            .append("  inner join subcontauniorg subund on sub.id = subund.subconta_id ")
            .append("  inner join vwhierarquiaorcamentaria vw on subund.unidadeorganizacional_id = vw.subordinada_id ")
            .append("  inner join vwhierarquiaorcamentaria vworg on vw.superior_id = vworg.subordinada_id ")
            .append(pesquisouUg ? " inner join UGESTORAUORGANIZACIONAL UgUnidade on vw.subordinada_id = ugunidade.unidadeorganizacional_id  inner join unidadegestora ug on ugunidade.unidadegestora_id = ug.id and ug.exercicio_id = :EXERCICIO_ID " : "")
            //Deixar comentado, n√£o remover
//            .append("  inner join subcontafonterec subfont on sub.id = subfont.subconta_id ")
//            .append("  inner join fontederecursos font on subfont.fontederecursos_id = font.id ")
            .append("  where to_date(:DATAREFERENCIA, 'dd/mm/yyyy') between vw.iniciovigencia and coalesce(vw.fimvigencia, to_date(:DATAREFERENCIA, 'dd/mm/yyyy')) ")
            .append("    and to_date(:DATAREFERENCIA, 'dd/mm/yyyy') between vworg.iniciovigencia and coalesce(vworg.fimvigencia, to_date(:DATAREFERENCIA, 'dd/mm/yyyy')) ")
//            .append("    and font.exercicio_id = :EXERCICIO_ID ")
            .append("    and subund.exercicio_id = :EXERCICIO_ID ")
            .append("    and cbe.id = :CBE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append(" order by VW.CODIGO, b.NUMEROBANCO, ag.numeroagencia, to_number(cbe.numeroconta) ");
        Query q = getEm().createNativeQuery(sql.toString());
        UtilRelatorioContabil.adicionarParametrosRetirandoLocais(parametros, q, 2, 3, 4);
        if (q.getResultList().isEmpty()) {
            return new ArrayList<>();
        } else {
            List<ConciliacaoBancariaItem> retorno = new ArrayList<>();
            for (Object[] obj : (List<Object[]>) q.getResultList()) {
                ConciliacaoBancariaItem item = new ConciliacaoBancariaItem();
                HashMap parametrosItens = new HashMap();
                item.setBanco((String) obj[0]);
                item.setAgencia((String) obj[1]);
                item.setNumero((String) obj[2]);
                item.setTituloContaBancaria((String) obj[3]);
                item.setTipoContaBancaria((String) obj[4]);
                item.setUnidade((String) obj[5]);
                item.setOrgao((String) obj[6]);
                item.setSubConta((String) obj[7]);
                parametrosItens.put("CBE_ID", ((BigDecimal) obj[8]).longValue());
                parametrosItens.put("SUB_ID", ((BigDecimal) obj[9]).longValue());
                parametrosItens.put("UNIDADE_ID", ((BigDecimal) obj[10]).longValue());
                item = gerarConsultaSaldo(pesquisouUg, parametros, dataSaldoAnterior, parametrosItens, item);
                item.setMovimentos(gerarConsultaMovimentos(pesquisouUg, parametros, parametrosItens, movimentosDiferenteZero));
                if (item.getSaldoContabil().compareTo(BigDecimal.ZERO) != 0
                    || !item.getMovimentos().isEmpty()
                    || movimentosDiferenteZero) {
                    retorno.add(item);
                }
            }
            return retorno;
        }
    }

    @TransactionTimeout(value = 1, unit = TimeUnit.HOURS)
    @Override
    public List<ConciliacaoBancariaMovimentos> gerarConsultaMovimentos(Boolean pesquisouUg, List<ParametrosRelatorios> parametros, HashMap parametrosItens, Boolean mostrarMovimentoIgualZero) {
        StringBuilder query = new StringBuilder();
        query.append(" SELECT * ")
            .append(" FROM ")
            .append("   (SELECT HISTORICO, ")
            .append("     DATA_MOVIMENTO, ")
            .append("     DATA_CONCILIACAO, ")
            .append("     MES_MOVIMENTO, ")
            .append("     CREDITO, ")
            .append("     DEBITO, ")
            .append("     NUMERO_movimento, ")
            .append("     TIPO_MOVIMENTO, ")
            .append("     TIPOOPERACAO, ")
            .append("     CODIGOOPERACAO ")
            .append("   FROM ")
            .append("     (SELECT HISTORICO, ")
            .append("       DATA_MOVIMENTO  AS DATA_MOVIMENTO, ")
            .append("       DATA_CONCILIACAO  AS DATA_CONCILIACAO, ")
            .append("       TO_CHAR(DATA_MOVIMENTO, 'MM/yyyy') AS MES_MOVIMENTO, ")
            .append("       coalesce(SUM(CREDITO), 0) AS CREDITO, ")
            .append("       coalesce(SUM(DEBITO), 0) AS DEBITO, ")
            .append("       COALESCE(NUMERO_movimento, '--') AS NUMERO_movimento, ")
            .append("       TIPO_MOVIMENTO, ")
            .append("       CASE TIPOOPERACAO ")
            .append("         WHEN 'DEBITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' THEN 'D√âBITO NO RAZ√ÉO N√ÉO CONSIDERADO NO BANCO (II)' ")
            .append("         WHEN 'CREDITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' THEN 'CR√âDITO NO RAZ√ÉO N√ÉO CONSIDERADO NO BANCO (III)' ")
            .append("         WHEN 'DEBITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' THEN 'D√âBITO NO BANCO N√ÉO CONSIDERADO NO RAZ√ÉO (IV)' ")
            .append("         WHEN 'CREDITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' THEN 'CR√âDITO NO BANCO N√ÉO CONSIDERADO NO RAZ√ÉO (V)' ")
            .append("       END AS TIPOOPERACAO, ")
            .append("       CASE TIPOOPERACAO ")
            .append("         WHEN 'DEBITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' THEN 1 ")
            .append("         WHEN 'CREDITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' THEN 2 ")
            .append("         WHEN 'DEBITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' THEN 3 ")
            .append("         WHEN 'CREDITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' THEN 4 ")
            .append("       END AS CODIGOOPERACAO ")
            .append("     FROM ")
            .append("       ( SELECT DISTINCT RR.DATALANCAMENTO AS DATA_MOVIMENTO, ")
            .append("         RR.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         RR.COMPLEMENTO                    AS HISTORICO, ")
            .append("           case  ")
            .append("           when rr.operacaoReceitarealizada in ")
            .append(OperacaoReceita.montarClausulaIn(OperacaoReceita.retornarOperacoesReceitaDeducao()))
            .append("           THEN COALESCE(FONTE.VALOR, 0) ")
            .append("           ELSE 0 ")
            .append("         END AS CREDITO, ")
            .append("           case  ")
            .append("           when rr.operacaoReceitarealizada in ")
            .append(OperacaoReceita.montarClausulaIn(OperacaoReceita.retornarOperacoesReceitaDeducao()))
            .append("           THEN 0 ")
            .append("           ELSE COALESCE(FONTE.VALOR, 0) ")
            .append("         END AS DEBITO, ")
            .append("         COALESCE(RR.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Receita Realizada' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM LANCAMENTORECEITAORC RR ")
            .append("       INNER JOIN LANCRECEITAFONTE FONTE ON RR.ID = FONTE.LANCRECEITAORC_ID ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON RR.UNIDADEORGANIZACIONAL_ID = VW.SUBORDINADA_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN RECEITALOA RL ON RL.ID = RR.RECEITALOA_ID ")
            .append("       INNER JOIN CONTARECEITA CR ON CR.ID = RL.CONTADERECEITA_ID ")
            .append("       INNER JOIN CONTA C ON CR.ID = C.ID ")
            .append("       INNER JOIN RECEITALOAFONTE RLF      ON FONTE.RECEITALOAFONTE_ID = RLF.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CD ON CD.ID = RLF.DESTINACAODERECURSOS_ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CD.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON RR.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON RR.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(RR.DATALANCAMENTO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (RR.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(RR.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT RRE.DATAESTORNO     AS DATA_MOVIMENTO, ")
            .append("         RRE.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         RRE.COMPLEMENTOHISTORICO AS HISTORICO, ")
            .append("           case  ")
            .append("           when rre.operacaoReceitarealizada in ")
            .append(OperacaoReceita.montarClausulaIn(OperacaoReceita.retornarOperacoesReceitaDeducao()))
            .append("           THEN 0 ")
            .append("           ELSE COALESCE(RRE.VALOR, 0) ")
            .append("         END AS CREDITO, ")
            .append("           case  ")
            .append("           when rre.operacaoReceitarealizada in ")
            .append(OperacaoReceita.montarClausulaIn(OperacaoReceita.retornarOperacoesReceitaDeducao()))
            .append("           THEN COALESCE(RRE.VALOR, 0) ")
            .append("           ELSE 0 ")
            .append("         END                         AS DEBITO, ")
            .append("         COALESCE(RRE.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. de Rec. Realizada'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM RECEITAORCESTORNO RRE ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON RRE.UNIDADEORGANIZACIONALORC = VW.SUBORDINADA_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN RECEITALOA RL ON RRE.RECEITALOA_ID = RL.ID ")
            .append("       INNER JOIN CONTARECEITA CR ON CR.ID = RL.CONTADERECEITA_ID ")
            .append("       INNER JOIN CONTA C ON CR.ID = C.ID ")
            .append("       INNER JOIN ReceitaORCFonteEstorno RFE on RRE.id = RFE.RECEITAORCESTORNO_ID")
            .append("       INNER JOIN RECEITALOAFONTE RLF      ON RFE.RECEITALOAFONTE_ID = RLF.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CD ON CD.ID = RLF.DESTINACAODERECURSOS_ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CD.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON RRE.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON RRE.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (RRE.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(RRE.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(RRE.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT PAG.DATAPAGAMENTO              AS DATA_MOVIMENTO, ")
            .append("         PAG.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         PAG.HISTORICORAZAO                  AS HISTORICO, ")
            .append("         COALESCE(PAG.VALORFINAL, 0 )        AS CREDITO, ")
            .append("         0                                   AS DEBITO, ")
            .append("         COALESCE(PAG.NUMEROPAGAMENTO, '--') AS NUMERO_movimento, ")
            .append("         'Pagamento'                         AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO         AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTO PAG ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = PAG.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID ")
            .append("       INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID ")
            .append("       INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID ")
            .append("       INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CDT.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON PAG.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (PAG.DATACONCILIACAO            IS NULL ")
            .append("       OR trunc(PAG.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(PAG.DATAPAGAMENTO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND PAG.CATEGORIAORCAMENTARIA        = 'NORMAL' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT PAGEST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         PAGEST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         PAGEST.HISTORICORAZAO           AS HISTORICO, ")
            .append("         0                               AS CREDITO, ")
            .append("         COALESCE(PAGEST.VALORFINAL, 0 ) AS DEBITO, ")
            .append("         COALESCE(PAGEST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Pagamento'          AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO     AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTOESTORNO PAGEST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = PAGEST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN PAGAMENTO PAG ON PAGEST.PAGAMENTO_ID = PAG.ID ")
            .append("       INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID ")
            .append("       INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID ")
            .append("       INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID ")
            .append("       INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CDT.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON PAGEST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (PAGEST.DATACONCILIACAO  IS NULL ")
            .append("       OR trunc(PAGEST.DATACONCILIACAO)     > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(PAGEST.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND PAG.CATEGORIAORCAMENTARIA = 'NORMAL' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT PAG.DATAPAGAMENTO              AS DATA_MOVIMENTO, ")
            .append("         PAG.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         PAG.HISTORICORAZAO                  AS HISTORICO, ")
            .append("         COALESCE(PAG.VALORFINAL, 0 )        AS CREDITO, ")
            .append("         0                                   AS DEBITO, ")
            .append("         COALESCE(PAG.NUMEROPAGAMENTO, '--') AS NUMERO_movimento, ")
            .append("         'Pagamento de Resto'                AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO         AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTO PAG ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = PAG.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID ")
            .append("       INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID ")
            .append("       INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID ")
            .append("       INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CDT.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON PAG.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(PAG.DATAPAGAMENTO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (PAG.DATACONCILIACAO  IS NULL ")
            .append("       OR trunc(PAG.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND PAG.CATEGORIAORCAMENTARIA        = 'RESTO' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT PAGEST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         PAGEST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         PAGEST.HISTORICORAZAO           AS HISTORICO, ")
            .append("         0                               AS CREDITO, ")
            .append("         COALESCE(PAGEST.VALORFINAL, 0 ) AS DEBITO, ")
            .append("         COALESCE(PAGEST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Pag. de Resto'         AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO     AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTOESTORNO PAGEST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = PAGEST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN PAGAMENTO PAG ON PAGEST.PAGAMENTO_ID = PAG.ID ")
            .append("       INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID ")
            .append("       INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID ")
            .append("       INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID ")
            .append("       INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID ")
            .append("       INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON CDT.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON PAGEST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (PAGEST.DATACONCILIACAO  IS NULL ")
            .append("       OR trunc(PAGEST.DATACONCILIACAO)    > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(PAGEST.DATAESTORNO)       <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND PAG.CATEGORIAORCAMENTARIA = 'RESTO' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT TRANSF.DATATRANSFERENCIA AS DATA_MOVIMENTO, ")
            .append("         TRANSF.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         TRANSF.HISTORICO              AS HISTORICO, ")
            .append("         COALESCE(TRANSF.VALOR, 0 )    AS CREDITO, ")
            .append("         0                             AS DEBITO, ")
            .append("         COALESCE(TRANSF.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Transfer√™ncia Financeira'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM TRANSFERENCIACONTAFINANC TRANSF ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.unidadeOrgConcedida_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSRETIRADA_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTARETIRADA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON TRANSF.eventoContabilRetirada_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (TRANSF.DATACONCILIACAO  IS NULL ")
            .append("       OR trunc(TRANSF.DATACONCILIACAO)     > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(TRANSF.DATATRANSFERENCIA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         EST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO                AS HISTORICO, ")
            .append("         0                            AS CREDITO, ")
            .append("         COALESCE(EST.VALOR, 0 )      AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Transfer√™ncia Fin.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO  AS TIPOOPERACAO ")
            .append("       FROM ESTORNOTRANSFERENCIA EST ")
            .append("       INNER JOIN TRANSFERENCIACONTAFINANC TRANSF ON EST.TRANSFERENCIA_ID = TRANSF.ID ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.UNIDADEORGCONCEDIDA_ID")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSRETIRADA_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTARETIRADA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.eventoContabilRetirada_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (EST.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(EST.DATACONCILIACAO)    > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO)    <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT TRANSF.DATATRANSFERENCIA AS DATA_MOVIMENTO, ")
            .append("         TRANSF.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         TRANSF.HISTORICO              AS HISTORICO, ")
            .append("         COALESCE(TRANSF.VALOR, 0)     AS CREDITO, ")
            .append("         0                             AS DEBITO, ")
            .append("         COALESCE(TRANSF.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Transfer√™ncia Financeira'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM TRANSFERENCIAMESMAUNIDADE TRANSF ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSRETIRADA_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTARETIRADA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON TRANSF.eventoContabilRetirada_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (TRANSF.DATACONCILIACAO  IS NULL ")
            .append("       OR trunc(TRANSF.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(TRANSF.DATATRANSFERENCIA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         EST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO                AS HISTORICO, ")
            .append("         0                            AS CREDITO, ")
            .append("         COALESCE(EST.VALOR, 0)       AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Transfer√™ncia Fin.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO  AS TIPOOPERACAO ")
            .append("       FROM ESTORNOTRANSFMESMAUNIDADE EST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = EST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN TRANSFERENCIAMESMAUNIDADE TRANSF ON EST.TRANSFERENCIAMESMAUNIDADE_ID = TRANSF.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSRETIRADA_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTARETIRADA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.eventoContabilRetirada_id  = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (EST.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(EST.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO)  <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT LIB.DATALIBERACAO      AS DATA_MOVIMENTO, ")
            .append("         LIB.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         LIB.OBSERVACOES             AS HISTORICO, ")
            .append("         0                           AS CREDITO, ")
            .append("         COALESCE(LIB.VALOR, 0)      AS DEBITO, ")
            .append("         COALESCE(LIB.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Libera√ß√£o Financeira'      AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM LIBERACAOCOTAFINANCEIRA LIB ")
            .append("       INNER JOIN SOLICITACAOCOTAFINANCEIRA SO ON SO.ID = LIB.SOLICITACAOCOTAFINANCEIRA_ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON SO.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON SO.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = so.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON LIB.eventoContabilDeposito_id = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (LIB.RECEBIDA IS NULL ")
            .append("       OR trunc(LIB.RECEBIDA)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(LIB.DATALIBERACAO)  <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO           AS DATA_MOVIMENTO, ")
            .append("         EST.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO                  AS HISTORICO, ")
            .append("         COALESCE(EST.VALOR, 0)         AS CREDITO, ")
            .append("         0                              AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')     AS NUMERO_movimento, ")
            .append("         'Est. de Libera√ß√£o Financeira' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO    AS TIPOOPERACAO ")
            .append("       FROM ESTORNOLIBCOTAFINANCEIRA EST ")
            .append("       INNER JOIN LIBERACAOCOTAFINANCEIRA LIB ON EST.LIBERACAO_ID = LIB.ID ")
            .append("       INNER JOIN SOLICITACAOCOTAFINANCEIRA SO ON SO.ID = LIB.SOLICITACAOCOTAFINANCEIRA_ID ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = SO.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON SO.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON SO.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.eventoContabilDeposito_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (EST.RECEBIDA IS NULL ")
            .append("       OR trunc(EST.RECEBIDA) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO)  <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT PAG.DATAPAGTO          AS DATA_MOVIMENTO, ")
            .append("         PAG.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         PAG.COMPLEMENTOHISTORICO    AS HISTORICO, ")
            .append("         COALESCE(PAG.VALOR, 0)      AS CREDITO, ")
            .append("         0                           AS DEBITO, ")
            .append("         COALESCE(PAG.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Despesa Extra'             AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTOEXTRA PAG ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = PAG.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON PAG.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON PAG.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (PAG.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(PAG.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(PAG.DATAPAGTO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO        AS DATA_MOVIMENTO, ")
            .append("         EST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO               AS HISTORICO, ")
            .append("         0                           AS CREDITO, ")
            .append("         COALESCE(EST.VALOR, 0)      AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. de Desp. Extra'       AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM PAGAMENTOEXTRAESTORNO EST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = EST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN PAGAMENTOEXTRA PAG ON EST.PAGAMENTOEXTRA_ID = PAG.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON PAG.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON PAG.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (EST.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(EST.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT AJUSTE.DATAAJUSTE        AS DATA_MOVIMENTO, ")
            .append("         AJUSTE.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         AJUSTE.HISTORICO              AS HISTORICO, ")
            .append("         0     AS CREDITO, ")
            .append("         COALESCE(AJUSTE.VALOR, 0)     AS DEBITO, ")
            .append("         COALESCE(AJUSTE.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Ajt. Atv. Disp. Aum.'        AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM AJUSTEATIVODISPONIVEL AJUSTE ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = AJUSTE.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON AJUSTE.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON AJUSTE.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON AJUSTE.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (AJUSTE.DATACONCILIACAO     IS NULL ")
            .append("       OR trunc(AJUSTE.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(AJUSTE.DATAAJUSTE) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (AJUSTE.TIPOAJUSTEDISPONIVEL in (:tipoAjusteAumentativo))")
            .append("       AND AJUSTE.TIPOLANCAMENTO        = 'NORMAL' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT AJUSTE.DATAAJUSTE         AS DATA_MOVIMENTO, ")
            .append("         AJUSTE.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         AJUSTE.HISTORICO               AS HISTORICO, ")
            .append("         COALESCE(AJUSTE.VALOR, 0)      AS CREDITO, ")
            .append("         0    AS DEBITO, ")
            .append("         COALESCE(AJUSTE.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. de Ajt. Atv. Disp. Aum.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO    AS TIPOOPERACAO ")
            .append("       FROM AJUSTEATIVODISPONIVEL AJUSTE ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = AJUSTE.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON AJUSTE.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON AJUSTE.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON AJUSTE.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (AJUSTE.DATACONCILIACAO     IS NULL ")
            .append("       OR trunc(AJUSTE.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(AJUSTE.DATAAJUSTE) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (AJUSTE.TIPOAJUSTEDISPONIVEL in (:tipoAjusteAumentativo))")
            .append("       AND AJUSTE.TIPOLANCAMENTO        = 'ESTORNO' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT AJUSTE.DATAAJUSTE        AS DATA_MOVIMENTO, ")
            .append("         AJUSTE.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         AJUSTE.HISTORICO              AS HISTORICO, ")
            .append("         COALESCE(AJUSTE.VALOR, 0)     AS CREDITO, ")
            .append("         0    AS DEBITO, ")
            .append("         COALESCE(AJUSTE.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Ajt. Atv. Disp. Dim.'        AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM AJUSTEATIVODISPONIVEL AJUSTE ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = AJUSTE.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON AJUSTE.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON AJUSTE.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON AJUSTE.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (AJUSTE.DATACONCILIACAO     IS NULL ")
            .append("       OR trunc(AJUSTE.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(AJUSTE.DATAAJUSTE)    <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (AJUSTE.TIPOAJUSTEDISPONIVEL in (:tipoAjusteDiminutivo))")
            .append("       AND AJUSTE.TIPOLANCAMENTO        = 'NORMAL' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT AJUSTE.DATAAJUSTE         AS DATA_MOVIMENTO, ")
            .append("         AJUSTE.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         AJUSTE.HISTORICO               AS HISTORICO, ")
            .append("         0     AS CREDITO, ")
            .append("         COALESCE(AJUSTE.VALOR, 0)                         AS DEBITO, ")
            .append("         COALESCE(AJUSTE.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. de Ajt. Atv. Disp. Dim.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO    AS TIPOOPERACAO ")
            .append("       FROM AJUSTEATIVODISPONIVEL AJUSTE ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = AJUSTE.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON AJUSTE.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON AJUSTE.CONTAFINANCEIRA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON AJUSTE.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (AJUSTE.DATACONCILIACAO     IS NULL ")
            .append("       OR trunc(AJUSTE.DATACONCILIACAO)   > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(AJUSTE.DATAAJUSTE)  <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND (AJUSTE.TIPOAJUSTEDISPONIVEL in (:tipoAjusteDiminutivo))")
            .append("       AND AJUSTE.TIPOLANCAMENTO        = 'ESTORNO' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT TRANSF.DATATRANSFERENCIA AS DATA_MOVIMENTO, ")
            .append("         TRANSF.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         TRANSF.HISTORICO              AS HISTORICO, ")
            .append("         0                             AS CREDITO, ")
            .append("         COALESCE(TRANSF.VALOR, 0)     AS DEBITO, ")
            .append("         COALESCE(TRANSF.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Transfer√™ncia Financeira'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM TRANSFERENCIAMESMAUNIDADE TRANSF ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSDEPOSITO_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTADEPOSITO_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON TRANSF.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (TRANSF.RECEBIDA  IS NULL ")
            .append("       OR trunc(TRANSF.RECEBIDA) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(TRANSF.DATATRANSFERENCIA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         EST.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO                AS HISTORICO, ")
            .append("         COALESCE(EST.VALOR, 0)       AS CREDITO, ")
            .append("         0                            AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Transfer√™ncia Fin.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO  AS TIPOOPERACAO ")
            .append("       FROM ESTORNOTRANSFMESMAUNIDADE EST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = EST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN TRANSFERENCIAMESMAUNIDADE TRANSF ON EST.TRANSFERENCIAMESMAUNIDADE_ID = TRANSF.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSDEPOSITO_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTADEPOSITO_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (EST.RECEBIDA IS NULL ")
            .append("       OR trunc(EST.RECEBIDA) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append("       and font.exercicio_id = :EXERCICIO_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT TRANSF.DATATRANSFERENCIA AS DATA_MOVIMENTO, ")
            .append("         TRANSF.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         TRANSF.HISTORICO              AS HISTORICO, ")
            .append("         0                             AS CREDITO, ")
            .append("         COALESCE(TRANSF.VALOR, 0 )    AS DEBITO, ")
            .append("         COALESCE(TRANSF.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Transfer√™ncia Financeira'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO   AS TIPOOPERACAO ")
            .append("       FROM TRANSFERENCIACONTAFINANC TRANSF ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSDEPOSITO_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTADEPOSITO_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON TRANSF.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND (TRANSF.RECEBIDA  IS NULL ")
            .append("       OR trunc(TRANSF.RECEBIDA)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(TRANSF.DATATRANSFERENCIA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO         AS DATA_MOVIMENTO, ")
            .append("         EST.RECEBIDA AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO                AS HISTORICO, ")
            .append("         COALESCE(EST.VALOR, 0 )      AS CREDITO, ")
            .append("         0                            AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')   AS NUMERO_movimento, ")
            .append("         'Est. de Transfer√™ncia Fin.' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO  AS TIPOOPERACAO ")
            .append("       FROM ESTORNOTRANSFERENCIA EST ")
            .append("       INNER JOIN TRANSFERENCIACONTAFINANC TRANSF ON EST.TRANSFERENCIA_ID = TRANSF.ID ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = TRANSF.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON TRANSF.FONTEDERECURSOSDEPOSITO_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON TRANSF.SUBCONTADEPOSITO_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (EST.RECEBIDA IS NULL ")
            .append("       OR trunc(EST.RECEBIDA) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT RECEXTRA.DATARECEITA       AS DATA_MOVIMENTO, ")
            .append("         RECEXTRA.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         RECEXTRA.COMPLEMENTOHISTORICO   AS HISTORICO, ")
            .append("         0                               AS CREDITO, ")
            .append("         COALESCE(RECEXTRA.VALOR, 0 )    AS DEBITO, ")
            .append("         COALESCE(RECEXTRA.NUMERO, '--') AS NUMERO_movimento, ")
            .append("         'Receita Extra'                 AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO     AS TIPOOPERACAO ")
            .append("       FROM RECEITAEXTRA RECEXTRA ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = RECEXTRA.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON RECEXTRA.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON RECEXTRA.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN CONTAEXTRAORCAMENTARIA CEXTRA ON RECEXTRA.CONTAEXTRAORCAMENTARIA_ID = CEXTRA.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON RECEXTRA.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (RECEXTRA.DATACONCILIACAO         IS NULL ")
            .append("       OR trunc(RECEXTRA.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(RECEXTRA.DATARECEITA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND CEXTRA.TIPOCONTAEXTRAORCAMENTARIA <> 'DEPOSITOS_CONSIGNACOES' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO        AS DATA_MOVIMENTO, ")
            .append("         EST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         EST.COMPLEMENTOHISTORICO    AS HISTORICO, ")
            .append("         COALESCE(EST.VALOR, 0 )     AS CREDITO, ")
            .append("         0                           AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. de Rec. Extra'        AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM RECEITAEXTRAESTORNO EST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = EST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN RECEITAEXTRA RECEXTRA ON EST.RECEITAEXTRA_ID = RECEXTRA.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON RECEXTRA.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON RECEXTRA.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN CONTAEXTRAORCAMENTARIA CEXTRA ON RECEXTRA.CONTAEXTRAORCAMENTARIA_ID = CEXTRA.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.EVENTOCONTABIL_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (EST.DATACONCILIACAO              IS NULL ")
            .append("       OR trunc(EST.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       AND CEXTRA.TIPOCONTAEXTRAORCAMENTARIA <> 'DEPOSITOS_CONSIGNACOES' ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT LIB.DATALIBERACAO      AS DATA_MOVIMENTO, ")
            .append("         LIB.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         LIB.OBSERVACOES             AS HISTORICO, ")
            .append("         COALESCE(LIB.VALOR, 0)      AS CREDITO, ")
            .append("         0                           AS DEBITO, ")
            .append("         COALESCE(LIB.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Libera√ß√£o Fin. Repasse'    AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM LIBERACAOCOTAFINANCEIRA LIB ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = LIB.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON LIB.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON LIB.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON LIB.eventoContabilRetirada_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (LIB.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(LIB.DATACONCILIACAO)   > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(LIB.DATALIBERACAO)  <= TO_DATE (:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       UNION ALL ")
            .append("       SELECT EST.DATAESTORNO        AS DATA_MOVIMENTO, ")
            .append("         EST.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         EST.HISTORICO               AS HISTORICO, ")
            .append("         0                           AS CREDITO, ")
            .append("         COALESCE(EST.VALOR, 0)      AS DEBITO, ")
            .append("         COALESCE(EST.NUMERO, '--')  AS NUMERO_movimento, ")
            .append("         'Est. da Lib. Fin. Repasse' AS TIPO_MOVIMENTO, ")
            .append("         EVE.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM ESTORNOLIBCOTAFINANCEIRA EST ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = EST.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN LIBERACAOCOTAFINANCEIRA LIB ON EST.LIBERACAO_ID = LIB.ID ")
            .append("       INNER JOIN FONTEDERECURSOS FONT ON LIB.FONTEDERECURSOS_ID = FONT.ID ")
            .append("       INNER JOIN SUBCONTA SUB ON LIB.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       INNER JOIN EVENTOCONTABIL EVE ON EST.eventoContabilRetirada_ID = EVE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (EST.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(EST.DATACONCILIACAO) > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       AND trunc(EST.DATAESTORNO)  <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "));
        query.append("       UNION ALL ")
            .append("       SELECT CAST(LANC.DATA AS DATE) AS DATA_MOVIMENTO, ")
            .append("         LANC.DATACONCILIACAO AS DATA_CONCILIACAO, ")
            .append("         LANC.HISTORICO               AS HISTORICO, ")
            .append("         CASE LANC.TIPOOPERACAOCONCILIACAO ")
            .append("           WHEN 'CREDITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' ")
            .append("           THEN LANC.VALOR ")
            .append("           WHEN 'CREDITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' ")
            .append("           THEN LANC.VALOR ")
            .append("         END AS CREDITO, ")
            .append("         CASE LANC.TIPOOPERACAOCONCILIACAO ")
            .append("           WHEN 'DEBITO_NO_BANCO_NAO_CONSIDERADO_NO_RAZAO' ")
            .append("           THEN LANC.VALOR ")
            .append("           WHEN 'DEBITO_NO_RAZAO_NAO_CONSIDERADO_NO_BANCO' ")
            .append("           THEN LANC.VALOR ")
            .append("         END                                              AS DEBITO, ")
            .append("         COALESCE(CAST(LANC.NUMERO AS VARCHAR(20)), '--') AS NUMERO_movimento, ")
            .append("         COALESCE(CAST(TP.NUMERO AS   VARCHAR(20)), '--') ")
            .append("         || ' - ' ")
            .append("         || TP.DESCRICAO              AS TIPO_MOVIMENTO, ")
            .append("         LANC.TIPOOPERACAOCONCILIACAO AS TIPOOPERACAO ")
            .append("       FROM LANCCONCILIACAOBANCARIA LANC ")
            .append("       INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = LANC.UNIDADEORGANIZACIONAL_ID ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("       INNER JOIN SUBCONTA SUB ON LANC.SUBCONTA_ID = SUB.ID ")
            .append("       INNER JOIN TIPOCONCILIACAO TP ON LANC.TIPOCONCILIACAO_ID = TP.ID ")
            .append("       INNER JOIN CONTABANCARIAENTIDADE CBE ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("       WHERE TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')  BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA, TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ) ")
            .append("       AND (LANC.DATACONCILIACAO IS NULL ")
            .append("       OR trunc(LANC.DATACONCILIACAO)  > TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY')) ")
            .append("       and cbe.id = :CBE_ID ")
            .append("       and sub.id = :SUB_ID ")
            .append("       and trunc(LANC.DATA) <= TO_DATE(:DATAREFERENCIA, 'DD/MM/YYYY') ")
            .append("       and vw.subordinada_id = :UNIDADE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " and "))
            .append("       ) ESSES_REGISTROS ")
            .append("     WHERE TIPOOPERACAO IS NOT NULL ")
            .append("     GROUP BY DATA_MOVIMENTO, ")
            .append("       DATA_CONCILIACAO, ")
            .append("       HISTORICO, ")
            .append("       TIPO_MOVIMENTO, ")
            .append("       NUMERO_movimento, ")
            .append("       TIPOOPERACAO ")
            .append("     ) DADOS ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 4, " where "))
            .append("     union all ")
            .append("   SELECT NULL AS HISTORICO, ")
            .append("     NULL AS DATA_MOVIMENTO, ")
            .append("     null as DATA_CONCILIACAO, ")
            .append("     NULL AS MES_MOVIMENTO, ")
            .append("     0 AS CREDITO, ")
            .append("     0 AS DEBITO, ")
            .append("     NULL AS NUMERO_movimento, ")
            .append("     NULL AS TIPO_MOVIMENTO, ")
            .append("     'D√âBITO NO RAZ√ÉO N√ÉO CONSIDERADO NO BANCO (II)' AS TIPOOPERACAO, ")
            .append("     1 AS CODIGOOPERACAO ")
            .append("   FROM DUAL ")
            .append("   UNION ALL ")
            .append("   SELECT NULL AS HISTORICO, ")
            .append("     NULL AS DATA_MOVIMENTO, ")
            .append("     null as DATA_CONCILIACAO, ")
            .append("     NULL AS MES_MOVIMENTO, ")
            .append("     0 AS CREDITO, ")
            .append("     0 AS DEBITO, ")
            .append("     NULL AS NUMERO_movimento, ")
            .append("     NULL AS TIPO_MOVIMENTO, ")
            .append("     'CR√âDITO NO RAZ√ÉO N√ÉO CONSIDERADO NO BANCO (III)' AS TIPOOPERACAO, ")
            .append("     2 AS CODIGOOPERACAO ")
            .append("   FROM DUAL ")
            .append("   UNION ALL ")
            .append("   SELECT NULL AS HISTORICO, ")
            .append("     NULL AS DATA_MOVIMENTO, ")
            .append("     null as DATA_CONCILIACAO, ")
            .append("     NULL AS MES_MOVIMENTO, ")
            .append("     0 AS CREDITO, ")
            .append("     0 AS DEBITO, ")
            .append("     NULL AS NUMERO_movimento, ")
            .append("     NULL AS TIPO_MOVIMENTO, ")
            .append("     'D√âBITO NO BANCO N√ÉO CONSIDERADO NO RAZ√ÉO (IV)' AS TIPOOPERACAO, ")
            .append("     3 AS CODIGOOPERACAO ")
            .append("   FROM DUAL ")
            .append("   UNION ALL ")
            .append("   SELECT NULL AS HISTORICO, ")
            .append("     NULL AS DATA_MOVIMENTO, ")
            .append("     null as DATA_CONCILIACAO, ")
            .append("     NULL AS MES_MOVIMENTO, ")
            .append("     0 AS CREDITO, ")
            .append("     0 AS DEBITO, ")
            .append("     NULL AS NUMERO_movimento, ")
            .append("     NULL AS TIPO_MOVIMENTO, ")
            .append("     'CR√âDITO NO BANCO N√ÉO CONSIDERADO NO RAZ√ÉO (V)' AS TIPOOPERACAO, ")
            .append("     4 AS CODIGOOPERACAO ")
            .append("   FROM DUAL ")
            .append("   ) ")
            .append(" order by codigooperacao, data_movimento, NUMERO_movimento ");
        Query q = getEm().createNativeQuery(query.toString());
        UtilRelatorioContabil.adicionarParametrosComparandoLocais(parametros, q, 0, 1, 4);
        q.setParameter("CBE_ID", parametrosItens.get("CBE_ID"));
        q.setParameter("SUB_ID", parametrosItens.get("SUB_ID"));
        q.setParameter("UNIDADE_ID", parametrosItens.get("UNIDADE_ID"));
        q.setParameter("tipoAjusteAumentativo", TipoAjusteDisponivel.recuperarListaName(TipoAjusteDisponivel.retornarAumentativo()));
        q.setParameter("tipoAjusteDiminutivo", TipoAjusteDisponivel.recuperarListaName(TipoAjusteDisponivel.retornarDiminutivo()));
        if (q.getResultList().isEmpty()) {
            return new ArrayList<>();
        } else {
            List<ConciliacaoBancariaMovimentos> retorno = new ArrayList<>();
            for (Object[] obj : (List<Object[]>) q.getResultList()) {
                ConciliacaoBancariaMovimentos item = new ConciliacaoBancariaMovimentos();
                item.setHistorico((String) obj[0]);
                item.setDataOperacao(DataUtil.getDataFormatada((Date) obj[1]));
                item.setDataConciliacao(DataUtil.getDataFormatada((Date) obj[2]));
                item.setMesMovimento((String) obj[3]);
                item.setCredito((BigDecimal) obj[4]);
                item.setDebito((BigDecimal) obj[5]);
                item.setNumeroMovimento((String) obj[6]);
                item.setTipoMovimento((String) obj[7]);
                item.setTipoOperacao((String) obj[8]);
                if (item.getCredito().compareTo(BigDecimal.ZERO) != 0
                    || item.getDebito().compareTo(BigDecimal.ZERO) != 0
                    || mostrarMovimentoIgualZero) {
                    retorno.add(item);
                }
            }
            return retorno;
        }
    }

    @TransactionTimeout(value = 1, unit = TimeUnit.HOURS)
    public List<ConciliacaoBancariaConstante> gerarConsultaSubReportSaldoConstante(Boolean pesquisouUg, List<ParametrosRelatorios> parametros, String mesReferencia) {
        StringBuilder query = new StringBuilder();
        query.append(" SELECT DISTINCT ")
            .append(" SD.NUMERO, ")
            .append(" TO_CHAR(SD.DATASALDO, 'DD/MM/YYYY') AS DATASALDO, ")
            .append(" COALESCE(SD.VALOR, 0) AS VALOR, ")
            .append(" SD.HISTORICO AS HISTORICO, ")
            .append(" pf.nome as responsavel ")
            .append("  FROM SALDOCONSTCONTABANCARIA SD ")
            .append("  INNER JOIN CONTABANCARIAENTIDADE CBE ON SD.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("  INNER JOIN SUBCONTA SUB ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("  INNER JOIN SUBCONTAUNIORG S ON S.SUBCONTA_ID = SUB.ID ")
            .append("   left join usuariosistema usu on sd.usuariosistema_id = usu.id ")
            .append("   left join pessoafisica pf on usu.pessoafisica_id = pf.id ")
            .append("  INNER JOIN VWHIERARQUIAORCAMENTARIA VW ON VW.SUBORDINADA_ID = S.UNIDADEORGANIZACIONAL_ID  ")
            .append(pesquisouUg ? " INNER JOIN UGESTORAUORGANIZACIONAL UGUNIDADE ON VW.SUBORDINADA_ID = UGUNIDADE.UNIDADEORGANIZACIONAL_ID  INNER JOIN UNIDADEGESTORA UG ON UGUNIDADE.UNIDADEGESTORA_ID = UG.ID AND UG.EXERCICIO_ID = :EXERCICIO_ID " : "")
            .append("  INNER JOIN (  ")
            .append("              SELECT trunc(MAX(SALDO.DATASALDO)) AS DATA,  ")
            .append("              SALDO.CONTABANCARIAENTIDADE_ID  ")
            .append("              FROM SALDOCONSTCONTABANCARIA SALDO ")
            .append("              INNER JOIN CONTABANCARIAENTIDADE CBE ON SALDO.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("              INNER JOIN SUBCONTA SUB ON SUB.CONTABANCARIAENTIDADE_ID = CBE.ID ")
            .append("              WHERE trunc(SALDO.DATASALDO) <= TO_DATE(:DATAREFERENCIA, 'dd/MM/YYYY') ")
            .append("              and to_char(SALDO.DATASALDO, 'MM/YYYY') = to_char(TO_DATE(:MESREFERENCIA, 'MM/YYYY'), 'MM/YYYY')  ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 2, " AND "))
            .append("              GROUP BY SALDO.CONTABANCARIAENTIDADE_ID) MAXSALDO ON trunc(MAXSALDO.DATA) = trunc(SD.DATASALDO) ")
            .append("              AND SD.CONTABANCARIAENTIDADE_ID = MAXSALDO.CONTABANCARIAENTIDADE_ID ")
            .append("  where trunc(SD.DATASALDO) BETWEEN VW.INICIOVIGENCIA AND COALESCE(VW.FIMVIGENCIA,  SD.DATASALDO) ")
            .append("    AND s.exercicio_id = :EXERCICIO_ID ")
            .append("    AND cbe.id = :CBE_ID ")
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 1, " AND "))
            .append(UtilRelatorioContabil.concatenarParametros(parametros, 2, " AND "));
        Query q = getEm().createNativeQuery(query.toString());
        q.setParameter("MESREFERENCIA", mesReferencia);
        UtilRelatorioContabil.adicionarParametrosRetirandoLocais(parametros, q, 3, 4);
        List<ConciliacaoBancariaConstante> retorno = Lists.newArrayList();
        List<Object[]> resultado = (List<Object[]>) q.getResultList();
        if (!resultado.isEmpty()) {
            for (Object[] obj : resultado) {
                ConciliacaoBancariaConstante item = new ConciliacaoBancariaConstante();
                item.setNumero((String) obj[0]);
                item.setDataOperacao((String) obj[1]);
                item.setValor((BigDecimal) obj[2]);
                item.setHistorico((String) obj[3]);
                item.setResponsavel((String) obj[4]);
                retorno.add(item);
            }
        }
        return retorno;
    }
}
