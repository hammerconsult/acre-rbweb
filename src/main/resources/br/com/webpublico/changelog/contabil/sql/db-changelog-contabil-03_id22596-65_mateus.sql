    create or replace view vwmovimentocontabil as

    SELECT distinct cast(RR.DATALANCAMENTO as date) AS DATA_MOVIMENTO,
    cast(RR.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    RR.COMPLEMENTO AS HISTORICO,
    CASE
    WHEN rr.operacaoReceitarealizada IN ('DEDUCAO_RECEITA_RENUNCIA', 'DEDUCAO_RECEITA_RESTITUICAO', 'DEDUCAO_RECEITA_DESCONTO', 'DEDUCAO_RECEITA_FUNDEB', 'DEDUCAO_RECEITA_OUTRAS')
    THEN COALESCE(FONTE.VALOR, 0)
    ELSE 0
    END AS CREDITO,
    CASE
    WHEN rr.operacaoReceitarealizada IN ('RECEITA_CREDITOS_RECEBER_BRUTA', 'RECEITA_DIRETAMENTE_ARRECADADA_BRUTA', 'RECEITA_DIVIDA_ATIVA_BRUTA')
    then COALESCE(FONTE.VALOR, 0)
    else 0
    END AS DEBITO,
    RR.NUMERO AS NUMERO,
    'RECEITA_REALIZADA' AS TIPO_MOVIMENTO,
    RR.EVENTOCONTABIL_ID as eventoContabil_id,
    CD.FONTEDERECURSOS_ID as fontederecursos_id,
    RR.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    RR.SUBCONTA_ID as subconta_id,
    rr.id as movimento_id,
    rr.identificador_id
    FROM LANCAMENTORECEITAORC RR
    INNER JOIN LANCRECEITAFONTE FONTE ON RR.ID = FONTE.LANCRECEITAORC_ID
    INNER JOIN RECEITALOAFONTE RLF ON FONTE.RECEITALOAFONTE_ID = RLF.ID
    INNER JOIN CONTADEDESTINACAO CD ON CD.ID = RLF.DESTINACAODERECURSOS_ID
    INNER JOIN FONTEDERECURSOS FONT ON CD.FONTEDERECURSOS_ID = FONT.ID

    UNION ALL
    SELECT cast(RRE.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(RRE.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    RRE.COMPLEMENTOHISTORICO AS HISTORICO,
    CASE
    WHEN rre.operacaoReceitarealizada IN ('RECEITA_CREDITOS_RECEBER_BRUTA', 'RECEITA_DIRETAMENTE_ARRECADADA_BRUTA', 'RECEITA_DIVIDA_ATIVA_BRUTA')
    THEN COALESCE(RRE.VALOR, 0)
    ELSE 0
    END AS CREDITO,
    CASE
    WHEN rre.operacaoReceitarealizada IN ('DEDUCAO_RECEITA_RENUNCIA', 'DEDUCAO_RECEITA_RESTITUICAO', 'DEDUCAO_RECEITA_DESCONTO', 'DEDUCAO_RECEITA_FUNDEB', 'DEDUCAO_RECEITA_OUTRAS')
    THEN COALESCE(RRE.VALOR, 0)
    ELSE 0
    END AS DEBITO,
    RRE.NUMERO AS NUMERO_movimento,
    'ESTORNO_RECEITA_REALIZADA' AS TIPO_MOVIMENTO,
    RRE.EVENTOCONTABIL_ID as eventoContabil_id,
    CD.FONTEDERECURSOS_ID as fontederecursos_id,
    RRE.UNIDADEORGANIZACIONALORC as unidadeorganizacional_id,
    RRE.CONTAFINANCEIRA_ID as subconta_id,
    rre.id as movimento_id,
    rre.identificador_id
    FROM RECEITAORCESTORNO RRE
    INNER JOIN ReceitaORCFonteEstorno RFE ON RRE.id = RFE.RECEITAORCESTORNO_ID
    INNER JOIN RECEITALOAFONTE RLF ON RFE.RECEITALOAFONTE_ID = RLF.ID
    INNER JOIN CONTADEDESTINACAO CD ON CD.ID = RLF.DESTINACAODERECURSOS_ID
    INNER JOIN FONTEDERECURSOS FONT ON CD.FONTEDERECURSOS_ID = FONT.ID

    UNION ALL
    SELECT cast(PAG.DATAPAGAMENTO as date) AS DATA_MOVIMENTO,
    cast(PAG.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    PAG.HISTORICORAZAO AS HISTORICO,
    COALESCE(PAG.VALORFINAL, 0 ) AS CREDITO,
    0 AS DEBITO,
    PAG.NUMEROPAGAMENTO AS NUMERO_movimento,
    'PAGAMENTO' AS TIPO_MOVIMENTO,
    PAG.EVENTOCONTABIL_ID as eventoContabil_id,
    CDT.FONTEDERECURSOS_ID as fontederecursos_id,
    PAG.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    pag.id as movimento_id,
    pag.IDENTIFICADOR_ID
    FROM PAGAMENTO PAG
    INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID
    INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID
    INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID
    INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID
    INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID
    where PAG.CATEGORIAORCAMENTARIA = 'NORMAL'
    and PAG.STATUS <> 'ABERTO'

    UNION ALL
    SELECT cast(PAGEST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(PAGEST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    PAGEST.HISTORICORAZAO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(PAGEST.VALORFINAL, 0 ) AS DEBITO,
    PAGEST.NUMERO AS NUMERO_movimento,
    'ESTORNO_PAGAMENTO' AS TIPO_MOVIMENTO,
    PAG.EVENTOCONTABIL_ID as eventoContabil_id,
    CDT.FONTEDERECURSOS_ID as fontederecursos_id,
    PAG.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    pagest.id as movimento_id,
    pagest.IDENTIFICADOR_ID
    FROM PAGAMENTOESTORNO PAGEST
    INNER JOIN PAGAMENTO PAG ON PAGEST.PAGAMENTO_ID = PAG.ID
    INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID
    INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID
    INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID
    INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID
    INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID
    where PAG.CATEGORIAORCAMENTARIA = 'NORMAL'
    and PAG.STATUS <> 'ABERTO'

    UNION ALL
    SELECT cast(PAG.DATAPAGAMENTO as date) AS DATA_MOVIMENTO,
    cast(PAG.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    PAG.HISTORICORAZAO AS HISTORICO,
    COALESCE(PAG.VALORFINAL, 0 ) AS CREDITO,
    0 AS DEBITO,
    PAG.NUMEROPAGAMENTO AS NUMERO_movimento,
    'PAGAMENTO_RESTO' AS TIPO_MOVIMENTO,
    PAG.EVENTOCONTABIL_ID as eventoContabil_id,
    CDT.FONTEDERECURSOS_ID as fontederecursos_id,
    PAG.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    pag.id as movimento_id,
    pag.IDENTIFICADOR_ID
    FROM PAGAMENTO PAG
    INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID
    INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID
    INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID
    INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID
    INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID
    where PAG.CATEGORIAORCAMENTARIA = 'RESTO'
    and PAG.STATUS <> 'ABERTO'

    UNION ALL
    SELECT cast(PAGEST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(PAGEST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    PAGEST.HISTORICORAZAO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(PAGEST.VALORFINAL, 0 ) AS DEBITO,
    PAGEST.NUMERO AS NUMERO_movimento,
    'ESTORNO_PAGAMENTO_RESTO' AS TIPO_MOVIMENTO,
    PAG.EVENTOCONTABIL_ID as eventoContabil_id,
    CDT.FONTEDERECURSOS_ID as fontederecursos_id,
    PAGEST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    pagest.id as movimento_id,
    pagest.IDENTIFICADOR_ID
    FROM PAGAMENTOESTORNO PAGEST
    INNER JOIN PAGAMENTO PAG ON PAGEST.PAGAMENTO_ID = PAG.ID
    INNER JOIN LIQUIDACAO LIQ ON PAG.LIQUIDACAO_ID = LIQ.ID
    INNER JOIN EMPENHO EMP ON LIQ.EMPENHO_ID = EMP.ID
    INNER JOIN FONTEDESPESAORC FDO ON EMP.FONTEDESPESAORC_ID = FDO.ID
    INNER JOIN PROVISAOPPAFONTE PROVISAO ON FDO.PROVISAOPPAFONTE_ID = PROVISAO.ID
    INNER JOIN CONTADEDESTINACAO CDT ON PROVISAO.DESTINACAODERECURSOS_ID = CDT.ID
    where PAG.CATEGORIAORCAMENTARIA = 'RESTO'
    and PAG.STATUS <> 'ABERTO'

    UNION ALL
    SELECT cast(TRANSF.DATATRANSFERENCIA as date) AS DATA_MOVIMENTO,
    cast(TRANSF.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    TRANSF.HISTORICO AS HISTORICO,
    COALESCE(TRANSF.VALOR, 0 ) AS CREDITO,
    0 AS DEBITO,
    TRANSF.NUMERO AS NUMERO_movimento,
    'TRANSFERENCIA_FINANCEIRA_RETIRADA' AS TIPO_MOVIMENTO,
    TRANSF.eventoContabilRetirada_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSRETIRADA_ID as fontederecursos_id,
    TRANSF.unidadeOrgConcedida_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTARETIRADA_ID as subconta_id,
    transf.id as movimento_id,
    transf.identificador_id
    FROM TRANSFERENCIACONTAFINANC TRANSF

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(EST.VALOR, 0 ) AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_TRANSFERENCIA_FINANCEIRA_RETIRADA' AS TIPO_MOVIMENTO,
    EST.eventoContabilRetirada_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSRETIRADA_ID as fontederecursos_id,
    TRANSF.unidadeOrgConcedida_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTARETIRADA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOTRANSFERENCIA EST
    INNER JOIN TRANSFERENCIACONTAFINANC TRANSF ON EST.TRANSFERENCIA_ID = TRANSF.ID

    UNION ALL
    SELECT cast(TRANSF.DATATRANSFERENCIA as date) AS DATA_MOVIMENTO,
    cast(TRANSF.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    TRANSF.HISTORICO AS HISTORICO,
    COALESCE(TRANSF.VALOR, 0 ) AS CREDITO,
    0 AS DEBITO,
    TRANSF.NUMERO AS NUMERO_movimento,
    'TRANSFERENCIA_FINANCEIRA_MESMA_UNIDADE' AS TIPO_MOVIMENTO,
    TRANSF.eventoContabilRetirada_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSRETIRADA_ID as fontederecursos_id,
    TRANSF.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTARETIRADA_ID as subconta_id,
    transf.id as movimento_id,
    transf.identificador_id
    FROM TRANSFERENCIAMESMAUNIDADE TRANSF

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(EST.VALOR, 0 ) AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_TRANSFERENCIA_FINANCEIRA_MESMA_UNIDADE' AS TIPO_MOVIMENTO,
    EST.eventoContabilRetirada_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSRETIRADA_ID as fontederecursos_id,
    EST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTARETIRADA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOTRANSFMESMAUNIDADE EST
    INNER JOIN TRANSFERENCIAMESMAUNIDADE TRANSF ON EST.TRANSFERENCIAMESMAUNIDADE_ID = TRANSF.ID

    UNION ALL
    SELECT cast(LIB.DATALIBERACAO as date) AS DATA_MOVIMENTO,
    cast(LIB.RECEBIDA as date) AS DATA_CONCILIACAO,
    LIB.OBSERVACOES  AS HISTORICO,
    0 AS CREDITO,
    COALESCE(LIB.VALOR, 0) AS DEBITO,
    LIB.NUMERO AS NUMERO_movimento,
    'LIBERACAO_FINANCEIRA' AS TIPO_MOVIMENTO,
    LIB.eventoContabilDeposito_id as eventoContabil_id,
    SO.FONTEDERECURSOS_ID as fontederecursos_id,
    so.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    SO.CONTAFINANCEIRA_ID as subconta_id,
    lib.id as movimento_id,
    lib.identificador_id
    FROM LIBERACAOCOTAFINANCEIRA LIB
    INNER JOIN SOLICITACAOCOTAFINANCEIRA SO ON SO.ID = LIB.SOLICITACAOCOTAFINANCEIRA_ID

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.RECEBIDA as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    COALESCE(EST.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_LIBERACAO_FINANCEIRA' AS TIPO_MOVIMENTO,
    EST.eventoContabilDeposito_ID as eventoContabil_id,
    SO.FONTEDERECURSOS_ID as fontederecursos_id,
    so.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    SO.CONTAFINANCEIRA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOLIBCOTAFINANCEIRA EST
    INNER JOIN LIBERACAOCOTAFINANCEIRA LIB ON EST.LIBERACAO_ID = LIB.ID
    INNER JOIN SOLICITACAOCOTAFINANCEIRA SO ON SO.ID = LIB.SOLICITACAOCOTAFINANCEIRA_ID

    UNION ALL
    SELECT cast(PAG.DATAPAGTO as date) AS DATA_MOVIMENTO,
    cast(PAG.DATACONCILIACAO as date)AS DATA_CONCILIACAO,
    PAG.COMPLEMENTOHISTORICO AS HISTORICO,
    COALESCE(PAG.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    PAG.NUMERO AS NUMERO_movimento,
    'DESPESA_EXTRA' AS TIPO_MOVIMENTO,
    PAG.EVENTOCONTABIL_ID as eventoContabil_id,
    PAG.FONTEDERECURSOS_ID as fontederecursos_id,
    PAG.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    pag.id as movimento_id,
    pag.IDENTIFICADOR_ID
    FROM PAGAMENTOEXTRA PAG

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(EST.VALOR, 0) AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_DESPESA_EXTRA' AS TIPO_MOVIMENTO,
    EST.EVENTOCONTABIL_ID as eventoContabil_id,
    PAG.FONTEDERECURSOS_ID as fontederecursos_id,
    EST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    PAG.SUBCONTA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM PAGAMENTOEXTRAESTORNO EST
    INNER JOIN PAGAMENTOEXTRA PAG ON EST.PAGAMENTOEXTRA_ID = PAG.ID

    UNION ALL
    SELECT cast(AJUSTE.DATAAJUSTE as date) AS DATA_MOVIMENTO,
    cast(AJUSTE.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    AJUSTE.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(AJUSTE.VALOR, 0) AS DEBITO,
    AJUSTE.NUMERO AS NUMERO_movimento,
    'AJUSTE_ATIVO_DISPONIVEL_AUMENTATIVO' AS TIPO_MOVIMENTO,
    AJUSTE.EVENTOCONTABIL_ID as eventoContabil_id,
    AJUSTE.FONTEDERECURSOS_ID as fontederecursos_id,
    AJUSTE.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    AJUSTE.CONTAFINANCEIRA_ID as subconta_id,
    ajuste.id as movimento_id,
    ajuste.identificador_id
    FROM AJUSTEATIVODISPONIVEL AJUSTE
    WHERE AJUSTE.TIPOAJUSTEDISPONIVEL IN ('AUMENTATIVO_CONTROLE_EXTERNO', 'AUMENTATIVO_CONTROLE_INTERNO', 'AUMENTATIVO_RPPS')
    AND AJUSTE.TIPOLANCAMENTO = 'NORMAL'

    UNION ALL
    SELECT cast(AJUSTE.DATAAJUSTE as date) AS DATA_MOVIMENTO,
    cast(AJUSTE.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    AJUSTE.HISTORICO AS HISTORICO,
    COALESCE(AJUSTE.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    AJUSTE.NUMERO AS NUMERO_movimento,
    'ESTORNO_AJUSTE_ATIVO_DISPONIVEL_AUMENTATIVO' AS TIPO_MOVIMENTO,
    AJUSTE.EVENTOCONTABIL_ID as eventoContabil_id,
    AJUSTE.FONTEDERECURSOS_ID as fontederecursos_id,
    AJUSTE.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    AJUSTE.CONTAFINANCEIRA_ID as subconta_id,
    ajuste.id as movimento_id,
    ajuste.identificador_id
    FROM AJUSTEATIVODISPONIVEL AJUSTE
    WHERE AJUSTE.TIPOAJUSTEDISPONIVEL IN ('AUMENTATIVO_CONTROLE_EXTERNO', 'AUMENTATIVO_CONTROLE_INTERNO', 'AUMENTATIVO_RPPS')
    AND AJUSTE.TIPOLANCAMENTO = 'ESTORNO'

    UNION ALL
    SELECT cast(AJUSTE.DATAAJUSTE as date) AS DATA_MOVIMENTO,
    cast(AJUSTE.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    AJUSTE.HISTORICO AS HISTORICO,
    COALESCE(AJUSTE.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    AJUSTE.NUMERO AS NUMERO_movimento,
    'AJUSTE_ATIVO_DISPONIVEL_DIMINUTIVO' AS TIPO_MOVIMENTO,
    AJUSTE.EVENTOCONTABIL_ID as eventoContabil_id,
    AJUSTE.FONTEDERECURSOS_ID as fontederecursos_id,
    AJUSTE.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    AJUSTE.CONTAFINANCEIRA_ID as subconta_id,
    ajuste.id as movimento_id,
    ajuste.identificador_id
    FROM AJUSTEATIVODISPONIVEL AJUSTE
    WHERE AJUSTE.TIPOAJUSTEDISPONIVEL IN ('DIMINUTIVO_CONTROLE_EXTERNO', 'DIMINUTIVO_CONTROLE_INTERNO', 'DIMINUTIVO_RPPS')
    AND AJUSTE.TIPOLANCAMENTO = 'NORMAL'

    UNION ALL
    SELECT cast(AJUSTE.DATAAJUSTE as date) AS DATA_MOVIMENTO,
    cast(AJUSTE.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    AJUSTE.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(AJUSTE.VALOR, 0) AS DEBITO,
    AJUSTE.NUMERO AS NUMERO_movimento,
    'ESTORNO_AJUSTE_ATIVO_DISPONIVEL_DIMINUTIVO' AS TIPO_MOVIMENTO,
    AJUSTE.EVENTOCONTABIL_ID as eventoContabil_id,
    AJUSTE.FONTEDERECURSOS_ID as fontederecursos_id,
    AJUSTE.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    AJUSTE.CONTAFINANCEIRA_ID as subconta_id,
    ajuste.id as movimento_id,
    ajuste.identificador_id
    FROM AJUSTEATIVODISPONIVEL AJUSTE
    WHERE AJUSTE.TIPOAJUSTEDISPONIVEL IN ('DIMINUTIVO_CONTROLE_EXTERNO', 'DIMINUTIVO_CONTROLE_INTERNO', 'DIMINUTIVO_RPPS')
    AND AJUSTE.TIPOLANCAMENTO = 'ESTORNO'

    UNION ALL
    SELECT cast(TRANSF.DATATRANSFERENCIA as date) AS DATA_MOVIMENTO,
    cast(TRANSF.RECEBIDA as date) AS DATA_CONCILIACAO,
    TRANSF.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(TRANSF.VALOR, 0) AS DEBITO,
    TRANSF.NUMERO AS NUMERO_movimento,
    'TRANSFERENCIA_FINANCEIRA_MESMA_UNIDADE_DEPOSITO' AS TIPO_MOVIMENTO,
    TRANSF.EVENTOCONTABIL_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSDEPOSITO_ID as fontederecursos_id,
    TRANSF.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTADEPOSITO_ID as subconta_id,
    transf.id as movimento_id,
    transf.identificador_id
    FROM TRANSFERENCIAMESMAUNIDADE TRANSF

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.RECEBIDA as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    COALESCE(EST.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_TRANSFERENCIA_FINANCEIRA_MESMA_UNIDADE_DEPOSITO' AS TIPO_MOVIMENTO,
    EST.EVENTOCONTABIL_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSDEPOSITO_ID as fontederecursos_id,
    EST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTADEPOSITO_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOTRANSFMESMAUNIDADE EST
    INNER JOIN TRANSFERENCIAMESMAUNIDADE TRANSF ON EST.TRANSFERENCIAMESMAUNIDADE_ID = TRANSF.ID

    UNION ALL
    SELECT cast(TRANSF.DATATRANSFERENCIA as date)AS DATA_MOVIMENTO,
    cast(TRANSF.RECEBIDA as date) AS DATA_CONCILIACAO,
    TRANSF.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(TRANSF.VALOR, 0 ) AS DEBITO,
    TRANSF.NUMERO AS NUMERO_movimento,
    'TRANSFERENCIA_FINANCEIRA_DEPOSITO' AS TIPO_MOVIMENTO,
    TRANSF.EVENTOCONTABIL_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSDEPOSITO_ID as fontederecursos_id,
    TRANSF.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTADEPOSITO_ID as subconta_id,
    transf.id as movimento_id,
    transf.identificador_id
    FROM TRANSFERENCIACONTAFINANC TRANSF

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.RECEBIDA as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    COALESCE(EST.VALOR, 0 ) AS CREDITO,
    0 AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_TRANSFERENCIA_FINANCEIRA_DEPOSITO' AS TIPO_MOVIMENTO,
    EST.EVENTOCONTABIL_ID as eventoContabil_id,
    TRANSF.FONTEDERECURSOSDEPOSITO_ID as fontederecursos_id,
    est.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    TRANSF.SUBCONTADEPOSITO_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOTRANSFERENCIA EST
    INNER JOIN TRANSFERENCIACONTAFINANC TRANSF ON EST.TRANSFERENCIA_ID = TRANSF.ID

    UNION ALL
    SELECT cast(RECEXTRA.DATARECEITA as date) AS DATA_MOVIMENTO,
    cast(RECEXTRA.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    RECEXTRA.COMPLEMENTOHISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(RECEXTRA.VALOR, 0 ) AS DEBITO,
    RECEXTRA.NUMERO AS NUMERO_movimento,
    'RECEITA_EXTRA' AS TIPO_MOVIMENTO,
    RECEXTRA.EVENTOCONTABIL_ID as eventoContabil_id,
    RECEXTRA.FONTEDERECURSOS_ID as fontederecursos_id,
    RECEXTRA.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    RECEXTRA.SUBCONTA_ID as subconta_id,
    recextra.id as movimento_id,
    recextra.identificador_id
    FROM RECEITAEXTRA RECEXTRA

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    EST.COMPLEMENTOHISTORICO AS HISTORICO,
    COALESCE(EST.VALOR, 0 ) AS CREDITO,
    0 AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_RECEITA_EXTRA' AS TIPO_MOVIMENTO,
    EST.EVENTOCONTABIL_ID as eventoContabil_id,
    RECEXTRA.FONTEDERECURSOS_ID as fontederecursos_id,
    EST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    RECEXTRA.SUBCONTA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM RECEITAEXTRAESTORNO EST
    INNER JOIN RECEITAEXTRA RECEXTRA ON EST.RECEITAEXTRA_ID = RECEXTRA.ID

    UNION ALL
    SELECT cast(LIB.DATALIBERACAO as date) AS DATA_MOVIMENTO,
    cast(LIB.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    LIB.OBSERVACOES AS HISTORICO,
    COALESCE(LIB.VALOR, 0) AS CREDITO,
    0 AS DEBITO,
    LIB.NUMERO AS NUMERO_movimento,
    'LIBERACAO_FINANCEIRA_REPASSE' AS TIPO_MOVIMENTO,
    LIB.eventoContabilRetirada_ID as eventoContabil_id,
    LIB.FONTEDERECURSOS_ID as fontederecursos_id,
    LIB.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    LIB.SUBCONTA_ID as subconta_id,
    lib.id as movimento_id,
    lib.identificador_id
    FROM LIBERACAOCOTAFINANCEIRA LIB

    UNION ALL
    SELECT cast(EST.DATAESTORNO as date) AS DATA_MOVIMENTO,
    cast(EST.DATACONCILIACAO as date) AS DATA_CONCILIACAO,
    EST.HISTORICO AS HISTORICO,
    0 AS CREDITO,
    COALESCE(EST.VALOR, 0) AS DEBITO,
    EST.NUMERO AS NUMERO_movimento,
    'ESTORNO_LIBERACAO_FINANCEIRA_REPASSE' AS TIPO_MOVIMENTO,
    EST.eventoContabilRetirada_ID as eventoContabil_id,
    LIB.FONTEDERECURSOS_ID as fontederecursos_id,
    EST.UNIDADEORGANIZACIONAL_ID as unidadeorganizacional_id,
    LIB.SUBCONTA_ID as subconta_id,
    est.id as movimento_id,
    est.identificador_id
    FROM ESTORNOLIBCOTAFINANCEIRA EST
    INNER JOIN LIBERACAOCOTAFINANCEIRA LIB ON EST.LIBERACAO_ID = LIB.ID
