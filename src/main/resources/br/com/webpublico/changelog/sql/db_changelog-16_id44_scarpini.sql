create or replace PACKAGE BODY PACOTE_CONSULTA_DE_DEBITOS
AS
FUNCTION GETVALORJUROS(
    PARAM_DATA_OPERACAO IN DATE ,
    PARAM_ID_PARCELA    IN NUMBER)
  RETURN NUMBER
AS
  TIPO_APLIC_ACRESCIMO_EXCEPTION EXCEPTION;
  CONFIGURACAO_ACRESCIMOS CONFIGURACAOACRESCIMOS%ROWTYPE;
  VALOR_JUROS              NUMBER;
  MULTIPLICADOR            NUMBER;
  DIFERENCA_DIAS           NUMBER;
  DIFERENCA_MESES          NUMBER;
  DIFERENCA_ANOS           NUMBER;
  QTDADE_DIAS_MES_ANTERIOR NUMBER;
  PARAM_SITUACAO           VARCHAR2(50);
  PARAM_DIVIDA_ID          NUMBER ;
  PARAM_VALOR              NUMBER ;
  PARAM_IS_DIVIDA_ATIVA    NUMBER;
  PARAM_DATA_VENCIMENTO    DATE ;
  PARAM_EXERCICIO          NUMBER;
BEGIN
  PARAM_VALOR :=0;
  EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = "dd/MM/yyyy"';
  SELECT pvd.vencimento,
    vd.divida_id,
    COALESCE(pvd.dividaativa, 0),
    spvd.situacaoparcela,
    exercicio.ano
  INTO PARAM_DATA_VENCIMENTO,
    PARAM_DIVIDA_ID,
    PARAM_IS_DIVIDA_ATIVA,
    PARAM_SITUACAO,
    PARAM_EXERCICIO
  FROM parcelavalordivida pvd
  INNER JOIN valordivida vd
  ON vd.id = pvd.valordivida_id
  INNER JOIN exercicio
  ON exercicio.id = vd.exercicio_id
  INNER JOIN situacaoparcelavalordivida spvd
  ON spvd.parcela_id = pvd.id
  WHERE spvd.id      =
    (SELECT MAX(id) FROM situacaoparcelavalordivida WHERE parcela_id = pvd.id
    )
  AND pvd.id                = PARAM_ID_PARCELA;
  IF TRUNC(PARAM_DATA_VENCIMENTO) >= TRUNC(PARAM_DATA_OPERACAO) THEN
    RETURN 0;
  END IF;
  IF PARAM_SITUACAO = 'PAGO' THEN
    SELECT COALESCE(SUM(itemdam.juros),0)
    INTO VALOR_JUROS
    FROM ITEMLOTEBAIXAPARCELA it
    INNER JOIN ITEMLOTEBAIXA
    ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
    INNER JOIN LOTEBAIXA
    ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
    INNER JOIN itemdam
    ON itemdam.id = it.ITEMDAM_ID
    INNER JOIN parcelavalordivida pvd
    ON pvd.id                          = itemdam.PARCELA_ID
    WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
    OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
    AND PVD.ID                         = PARAM_ID_PARCELA;
    RETURN VALOR_JUROS;
  END IF;
  IF PARAM_SITUACAO <> 'EM_ABERTO' THEN
    RETURN 0;
  END IF;
  SELECT CA.*
  INTO CONFIGURACAO_ACRESCIMOS
  FROM DIVIDAACRESCIMO DA
  INNER JOIN CONFIGURACAOACRESCIMOS CA
  ON CA.ID                       = DA.ACRESCIMO_ID
  WHERE DA.DIVIDA_ID             = PARAM_DIVIDA_ID
  AND DA.INICIOVIGENCIA         <= SYSDATE
  AND ( DA.FINALVIGENCIA        IS NULL
  OR DA.FINALVIGENCIA           >= SYSDATE );
  IF CONFIGURACAO_ACRESCIMOS.ID IS NULL THEN
    RETURN 0;
  END IF;
  IF CONTEMINCIDENCIA( 'IMPOSTO', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                       := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'IMPOSTO');
  END IF;
  IF CONTEMINCIDENCIA( 'TAXA', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                    := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'TAXA');
  END IF;
  IF CONTEMINCIDENCIA( 'CORRECAO', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                        := PARAM_VALOR + GETVALORCORRECAO(PARAM_ID_PARCELA, PARAM_EXERCICIO);
  END IF;
  IF CONTEMINCIDENCIA( 'MULTA_ORIGINAL', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                              := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'MULTA');
  END IF;
  IF CONTEMINCIDENCIA( 'COREECAO_ORIGINAL', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                                 := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'CORRECAO');
  END IF;
  IF CONTEMINCIDENCIA( 'HONORARIOS_ORIGINAL', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                                   := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'HONORARIOS');
  END IF;
  IF CONTEMINCIDENCIA( 'JUROS_ORIGINAL', 'JUROS', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                              := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'JUROS');
  END IF;
  DIFERENCA_DIAS    := PARAM_DATA_OPERACAO - PARAM_DATA_VENCIMENTO;
  DIFERENCA_MESES   := DIFERENCA_DIAS      /30;
  IF DIFERENCA_MESES < 0 THEN
    DIFERENCA_MESES := DIFERENCA_MESES + 12;
  END IF;
  SELECT TO_NUMBER(TO_CHAR(LAST_DAY(PARAM_DATA_OPERACAO),'dd'))
  INTO QTDADE_DIAS_MES_ANTERIOR
  FROM DUAL;
  IF DIFERENCA_DIAS  < 0 THEN
    DIFERENCA_DIAS  := DIFERENCA_DIAS  + QTDADE_DIAS_MES_ANTERIOR;
    DIFERENCA_MESES := DIFERENCA_MESES - 1;
  END IF;
  IF CONFIGURACAO_ACRESCIMOS.JUROSFRACIONADO = 1 THEN
    MULTIPLICADOR                           := DIFERENCA_MESES + ( DIFERENCA_DIAS / QTDADE_DIAS_MES_ANTERIOR);
  ELSE
    IF DIFERENCA_DIAS              > 0 THEN
      IF ROUND(DIFERENCA_MESES, 0) < DIFERENCA_MESES THEN
        DIFERENCA_MESES           := DIFERENCA_MESES + 1;
      END IF;
      MULTIPLICADOR := ROUND(DIFERENCA_MESES, 0);
    END IF;
  END IF;
  MULTIPLICADOR           := MULTIPLICADOR / 100;
  IF PARAM_IS_DIVIDA_ATIVA = 1 THEN
    VALOR_JUROS           := (PARAM_VALOR * MULTIPLICADOR) * CONFIGURACAO_ACRESCIMOS.VALORJUROSDIVIDAATIVA;
  ELSE
    VALOR_JUROS := (PARAM_VALOR * MULTIPLICADOR) * CONFIGURACAO_ACRESCIMOS.VALORJUROSEXERCICIO;
  END IF;
  RETURN VALOR_JUROS + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'JUROS');
EXCEPTION
WHEN NO_DATA_FOUND THEN
  RETURN 0;
WHEN TIPO_APLIC_ACRESCIMO_EXCEPTION THEN
  RAISE_APPLICATION_ERROR (-20000, 'TIPO DE APLICAÇÃO DE ACRÉSCIMO INVÁLIDO!');
END GETVALORJUROS;
FUNCTION GETVALORMULTA(
    PARAM_DATA_OPERACAO IN DATE ,
    PARAM_ID_PARCELA    IN NUMBER )
  RETURN NUMBER
AS
  TIPO_APLIC_ACRESCIMO_EXCEPTION EXCEPTION;
  CONFIGURACAO_ACRESCIMOS CONFIGURACAOACRESCIMOS%ROWTYPE;
  ITEM_CONFIGURACAO_VALOR NUMBER;
  QTDADE_DIAS_ATRASO      NUMBER;
  PERCENTUAL_MULTA        NUMBER;
  VALOR_MULTA             NUMBER;
  PARAM_SITUACAO          VARCHAR2(50);
  PARAM_DIVIDA_ID         NUMBER ;
  PARAM_VALOR             NUMBER ;
  PARAM_IS_DIVIDA_ATIVA   NUMBER;
  PARAM_DATA_VENCIMENTO   DATE;
  PARAM_EXERCICIO         NUMBER;
BEGIN
  EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = "dd/MM/yyyy"';
  PARAM_VALOR        := 0;
  PERCENTUAL_MULTA   := 0;
  QTDADE_DIAS_ATRASO := 0;
  SELECT pvd.vencimento,
    vd.divida_id,
    COALESCE(pvd.dividaativa, 0),
    spvd.situacaoparcela,
    exercicio.ano
  INTO PARAM_DATA_VENCIMENTO,
    PARAM_DIVIDA_ID,
    PARAM_IS_DIVIDA_ATIVA,
    PARAM_SITUACAO,
    PARAM_EXERCICIO
  FROM parcelavalordivida pvd
  INNER JOIN valordivida vd
  ON vd.id = pvd.valordivida_id
  INNER JOIN exercicio
  ON exercicio.id = vd.exercicio_id
  INNER JOIN situacaoparcelavalordivida spvd
  ON spvd.parcela_id = pvd.id
  WHERE spvd.id      =
    (SELECT MAX(id) FROM situacaoparcelavalordivida WHERE parcela_id = pvd.id
    )
  AND pvd.id                = PARAM_ID_PARCELA;
  IF TRUNC(PARAM_DATA_VENCIMENTO) >= TRUNC(PARAM_DATA_OPERACAO) THEN
    RETURN 0;
  END IF;
  IF PARAM_SITUACAO = 'PAGO' THEN
    SELECT COALESCE(SUM(itemdam.multa),0)
    INTO VALOR_MULTA
    FROM ITEMLOTEBAIXAPARCELA it
    INNER JOIN ITEMLOTEBAIXA
    ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
    INNER JOIN LOTEBAIXA
    ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
    INNER JOIN itemdam
    ON itemdam.id = it.ITEMDAM_ID
    INNER JOIN parcelavalordivida pvd
    ON pvd.id                          = itemdam.PARCELA_ID
    WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
    OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
    AND PVD.ID                         = PARAM_ID_PARCELA;
    RETURN VALOR_MULTA;
  END IF;
  IF PARAM_SITUACAO <> 'EM_ABERTO' THEN
    RETURN 0;
  END IF;
  SELECT CA.*
  INTO CONFIGURACAO_ACRESCIMOS
  FROM DIVIDAACRESCIMO DA
  INNER JOIN CONFIGURACAOACRESCIMOS CA
  ON CA.ID                      = DA.ACRESCIMO_ID
  WHERE DA.DIVIDA_ID            = PARAM_DIVIDA_ID
  AND DA.INICIOVIGENCIA        <= SYSDATE
  AND ( DA.FINALVIGENCIA       IS NULL
  OR DA.FINALVIGENCIA          >= SYSDATE );
  IF CONFIGURACAO_ACRESCIMOS.ID = NULL THEN
    RETURN 0;
  END IF;
  IF CONFIGURACAO_ACRESCIMOS.ID IS NULL THEN
    RETURN 0;
  END IF;
  IF CONTEMINCIDENCIA( 'IMPOSTO', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                       := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'IMPOSTO');
  END IF;
  IF CONTEMINCIDENCIA( 'TAXA', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                    := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'TAXA');
  END IF;
  IF CONTEMINCIDENCIA( 'CORRECAO', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                        := PARAM_VALOR + GETVALORCORRECAO(PARAM_ID_PARCELA, PARAM_EXERCICIO);
  END IF;
  IF CONTEMINCIDENCIA( 'MULTA_ORIGINAL', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                              := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'MULTA');
  END IF;
  IF CONTEMINCIDENCIA( 'COREECAO_ORIGINAL', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                                 := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'CORRECAO');
  END IF;
  IF CONTEMINCIDENCIA( 'HONORARIOS_ORIGINAL', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                                   := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'HONORARIOS');
  END IF;
  IF CONTEMINCIDENCIA( 'JUROS_ORIGINAL', 'MULTA', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_VALOR                                                              := PARAM_VALOR + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'JUROS');
  END IF;
  QTDADE_DIAS_ATRASO      := ROUND(PARAM_DATA_OPERACAO - PARAM_DATA_VENCIMENTO,0);
  IF PARAM_IS_DIVIDA_ATIVA = 0 THEN
    SELECT VALOR
    INTO ITEM_CONFIGURACAO_VALOR
    FROM ITEMCONFIGURACAOACRESCIMOS
    WHERE QNTDIAS                >= QTDADE_DIAS_ATRASO
    AND CONFIGURACAOACRESCIMOS_ID = CONFIGURACAO_ACRESCIMOS.ID
    AND ROWNUM                    = 1
    ORDER BY QNTDIAS;
    IF ITEM_CONFIGURACAO_VALOR IS NOT NULL THEN
      PERCENTUAL_MULTA         := ITEM_CONFIGURACAO_VALOR / 100;
    END IF;
  ELSE
    PERCENTUAL_MULTA := CONFIGURACAO_ACRESCIMOS.VALORDIVIDAATIVAMULTA / 100;
  END IF;
  VALOR_MULTA          := PARAM_VALOR * PERCENTUAL_MULTA;
  RETURN VALOR_MULTA + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'MULTA');
EXCEPTION
WHEN NO_DATA_FOUND THEN
  RETURN 0;
WHEN TIPO_APLIC_ACRESCIMO_EXCEPTION THEN
  RAISE_APPLICATION_ERROR (-20000, 'TIPO DE APLICAÇÃO DE ACRÉSCIMO INVÁLIDO!');
END GETVALORMULTA;
FUNCTION GETVALORCORRECAO(
    PARAM_ID_PARCELA    IN NUMBER,
    PARAM_EXERCICIO_ANO IN NUMBER)
  RETURN NUMBER
IS
  VALORCORRIGIDO              NUMBER;
  PARAM_DIVIDA_ID             NUMBER ;
  PARAM_SALDO                 NUMBER;
  PARAM_DATA_REGISTRO_PARCELA DATE;
  PARAM_SITUACAO              VARCHAR2(50);
  CONFIGURACAO_ACRESCIMOS CONFIGURACAOACRESCIMOS%ROWTYPE;
BEGIN
  PARAM_SALDO := 0;
  SELECT pvd.dataregistro,
    spvd.situacaoparcela,
    divida.id
  INTO PARAM_DATA_REGISTRO_PARCELA,
    PARAM_SITUACAO,
    PARAM_DIVIDA_ID
  FROM parcelavalordivida pvd
  INNER JOIN valordivida vd
  ON vd.id = pvd.valordivida_id
  INNER JOIN DIVIDA
  ON DIVIDA.ID = VD.DIVIDA_ID
  INNER JOIN situacaoparcelavalordivida spvd
  ON spvd.parcela_id = pvd.id
  WHERE spvd.id      =
    (SELECT MAX(id) FROM situacaoparcelavalordivida WHERE parcela_id = pvd.id
    )
  AND pvd.id        = PARAM_ID_PARCELA;
  IF PARAM_SITUACAO = 'PAGO' THEN
    SELECT COALESCE(SUM(itemdam.correcaomonetaria),0)
    INTO VALORCORRIGIDO
    FROM ITEMLOTEBAIXAPARCELA it
    INNER JOIN ITEMLOTEBAIXA
    ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
    INNER JOIN LOTEBAIXA
    ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
    INNER JOIN itemdam
    ON itemdam.id = it.ITEMDAM_ID
    INNER JOIN parcelavalordivida pvd
    ON pvd.id                          = itemdam.PARCELA_ID
    WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
    OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
    AND PVD.ID                         = PARAM_ID_PARCELA;
    RETURN VALORCORRIGIDO;
  END IF;
  IF PARAM_SITUACAO <> 'EM_ABERTO' THEN
    RETURN 0;
  END IF;
  SELECT CA.*
  INTO CONFIGURACAO_ACRESCIMOS
  FROM DIVIDAACRESCIMO DA
  INNER JOIN CONFIGURACAOACRESCIMOS CA
  ON CA.ID                      = DA.ACRESCIMO_ID
  WHERE DA.DIVIDA_ID            = PARAM_DIVIDA_ID
  AND DA.INICIOVIGENCIA        <= SYSDATE
  AND ( DA.FINALVIGENCIA       IS NULL
  OR DA.FINALVIGENCIA          >= SYSDATE );
  IF CONFIGURACAO_ACRESCIMOS.ID = NULL THEN
    RETURN 0;
  END IF;
  IF CONFIGURACAO_ACRESCIMOS.CALCULACORRECAO <> 1 THEN
    RETURN 0;
  END IF;
  IF CONTEMINCIDENCIA( 'IMPOSTO', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                          := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'IMPOSTO');
  END IF;
  IF CONTEMINCIDENCIA( 'TAXA', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                       := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'TAXA');
  END IF;
  IF CONTEMINCIDENCIA( 'MULTA_ORIGINAL', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                                 := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'MULTA');
  END IF;
  IF CONTEMINCIDENCIA( 'COREECAO_ORIGINAL', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                                    := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'CORRECAO');
  END IF;
  IF CONTEMINCIDENCIA( 'HONORARIOS_ORIGINAL', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                                      := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'HONORARIOS');
  END IF;
  IF CONTEMINCIDENCIA( 'JUROS_ORIGINAL', 'CORRECAO', CONFIGURACAO_ACRESCIMOS.ID) = 1 THEN
    PARAM_SALDO                                                                 := PARAM_SALDO + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'JUROS');
  END IF;
  SELECT
    CASE
      WHEN PARAM_SALDO > 0
      THEN COALESCE((PARAM_SALDO/COALESCE(
        (SELECT MOEDADATAPARCELA.VALOR
        FROM MOEDA MOEDADATAPARCELA
        INNER JOIN INDICEECONOMICO INDICEDATAPARCELA
        ON INDICEDATAPARCELA.ID         = MOEDADATAPARCELA.INDICEECONOMICO_ID
        WHERE MOEDADATAPARCELA.MES      = TO_NUMBER(TO_CHAR(PARAM_DATA_REGISTRO_PARCELA,'MM'))
        AND MOEDADATAPARCELA.ANO        = PARAM_EXERCICIO_ANO
        AND INDICEDATAPARCELA.DESCRICAO = 'UFM'
        ) , 1)) * COALESCE(
        (SELECT MOEDAATUAL.VALOR
        FROM MOEDA MOEDAATUAL
        INNER JOIN INDICEECONOMICO INDICEATUAL
        ON INDICEATUAL.ID         = MOEDAATUAL.INDICEECONOMICO_ID
        WHERE MOEDAATUAL.MES      = TO_NUMBER(TO_CHAR(SYSDATE,'MM'))
        AND MOEDAATUAL.ANO        = TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))
        AND INDICEATUAL.DESCRICAO = 'UFM'
        ) , 1), 0)
      ELSE 0
    END
  INTO VALORCORRIGIDO
  FROM DUAL;
  RETURN (VALORCORRIGIDO - PARAM_SALDO) + GETVALORTIPOTRIBUTO(PARAM_ID_PARCELA, 'CORRECAO');
END GETVALORCORRECAO;
FUNCTION GETVALORDESCONTO(
    PARAM_PARCELA_ID IN NUMBER )
  RETURN NUMBER
AS
  VALOR_DESCONTO NUMBER;
BEGIN
  SELECT COALESCE(SUM(item.valor * (desconto.porcentagemDesconto/100)),0)
  INTO VALOR_DESCONTO
  FROM descontoitemparcela desconto
  INNER JOIN itemparcelavalordivida item
  ON item.id                       = desconto.itemparcelavalordivida_id
  WHERE item.parcelavalordivida_id = PARAM_PARCELA_ID
  AND desconto.porcentagemdesconto > 0;
  RETURN VALOR_DESCONTO;
END GETVALORDESCONTO;
FUNCTION GETVALORTIPOTRIBUTO(
    PARAM_PARCELA_ID   IN NUMBER,
    PARAM_TIPO_TRIBUTO IN VARCHAR2)
  RETURN NUMBER
AS
  VALOR_ORIGINAL NUMBER;
  VALOR_SALDO    NUMBER;
  VALOR_SOMA     NUMBER;
BEGIN
  SELECT COALESCE(pvd.valor,0),
    COALESCE(spvd.saldo,0),
    COALESCE(SUM(i.valor),0)
  INTO VALOR_ORIGINAL,
    VALOR_SALDO,
    VALOR_SOMA
  FROM itemparcelavalordivida i
  INNER JOIN PARCELAVALORDIVIDA PVD
  ON i.PARCELAVALORDIVIDA_ID = PVD.ID
  INNER JOIN itemvalordivida iv
  ON iv.id = i.itemvalordivida_id
  INNER JOIN tributo t
  ON t.id = iv.tributo_id
  INNER JOIN situacaoparcelavalordivida spvd
  ON spvd.parcela_id = pvd.id
  WHERE spvd.id      =
    (SELECT MAX(id) FROM situacaoparcelavalordivida WHERE parcela_id = pvd.id
    )
  AND PVD.ID        = PARAM_PARCELA_ID
  AND t.tipotributo = PARAM_TIPO_TRIBUTO
  GROUP BY pvd.valor,
    spvd.saldo;
     RETURN VALOR_SALDO * ((VALOR_SOMA *100)/VALOR_ORIGINAL) / 100;
EXCEPTION
WHEN NO_DATA_FOUND THEN
  RETURN 0; 
END GETVALORTIPOTRIBUTO;
FUNCTION GETNUMEROPARCELA(
    PARAM_ID_VALOR_DIVIDA    IN NUMBER ,
    PARAM_ID_OPCAO_PAGAMENTO IN NUMBER ,
    PARAM_PROMOCIONAL        IN NUMBER ,
    PARAM_SEQUENCIA_PARCELA  IN VARCHAR2 )
  RETURN VARCHAR2
AS
  NUMERO_PARCELA VARCHAR2(30);
BEGIN
  SELECT
    CASE
      WHEN PARAM_PROMOCIONAL = 1
      THEN (COALESCE(PARAM_SEQUENCIA_PARCELA,'')
        || '/0 UN')
      ELSE (COALESCE(PARAM_SEQUENCIA_PARCELA,'')
        ||'/'
        || TO_CHAR(
        (SELECT COUNT(p.id)
        FROM ParcelaValorDivida p
        INNER JOIN valordivida v
        ON v.id                 = p.valordivida_id
        WHERE v.id              = PARAM_ID_VALOR_DIVIDA
        AND p.opcaoPagamento_id = PARAM_ID_OPCAO_PAGAMENTO
        ) ))
    END
  INTO NUMERO_PARCELA
  FROM DUAL;
  RETURN NUMERO_PARCELA;
END GETNUMEROPARCELA;
FUNCTION GETVALORHONORARIOS(
    PARAM_ID_PARCELA IN NUMBER )
  RETURN NUMBER
AS
  TIPO_APLIC_ACRESCIMO_EXCEPTION EXCEPTION;
  CONFIGURACAO_ACRESCIMOS CONFIGURACAOACRESCIMOS%ROWTYPE;
  VALOR_HONORARIO          NUMBER;
  PORCENTAGEM_APLICAR      NUMBER;
  PARAM_VALOR              NUMBER;
  PARAM_DIVIDA_ID          NUMBER;
  PARAM_IS_DIVIDA_AJUIZADA NUMBER;
  PARAM_SITUACAO           VARCHAR2(50);
BEGIN
  SELECT COALESCE(pvd.dividaativaajuizada,0),
    vd.divida_id,
    spvd.saldo,
    spvd.situacaoparcela
  INTO PARAM_IS_DIVIDA_AJUIZADA,
    PARAM_DIVIDA_ID,
    PARAM_VALOR,
    PARAM_SITUACAO
  FROM parcelavalordivida pvd
  INNER JOIN valordivida vd
  ON vd.id = pvd.valordivida_id
  INNER JOIN situacaoparcelavalordivida spvd
  ON spvd.parcela_id = pvd.id
  WHERE spvd.id      =
    (SELECT MAX(id) FROM situacaoparcelavalordivida WHERE parcela_id = pvd.id
    )
  AND pvd.id        = PARAM_ID_PARCELA;
  IF PARAM_SITUACAO = 'PAGO' THEN
    SELECT COALESCE(SUM(itemdam.honorarios),0)
    INTO VALOR_HONORARIO
    FROM ITEMLOTEBAIXAPARCELA it
    INNER JOIN ITEMLOTEBAIXA
    ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
    INNER JOIN LOTEBAIXA
    ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
    INNER JOIN itemdam
    ON itemdam.id = it.ITEMDAM_ID
    INNER JOIN parcelavalordivida pvd
    ON pvd.id                          = itemdam.PARCELA_ID
    WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
    OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
    AND PVD.ID                         = PARAM_ID_PARCELA;
    RETURN VALOR_HONORARIO;
  END IF;
  IF PARAM_SITUACAO <> 'EM_ABERTO' THEN
    RETURN 0;
  END IF;
  SELECT CA.*
  INTO CONFIGURACAO_ACRESCIMOS
  FROM DIVIDAACRESCIMO DA
  INNER JOIN CONFIGURACAOACRESCIMOS CA
  ON CA.ID                      = DA.ACRESCIMO_ID
  WHERE DA.DIVIDA_ID            = PARAM_DIVIDA_ID
  AND DA.INICIOVIGENCIA        <= SYSDATE
  AND ( DA.FINALVIGENCIA       IS NULL
  OR DA.FINALVIGENCIA          >= SYSDATE );
  IF CONFIGURACAO_ACRESCIMOS.ID = NULL THEN
    RETURN 0;
  END IF;
  IF PARAM_IS_DIVIDA_AJUIZADA <> 1 THEN
    VALOR_HONORARIO           := 0;
  ELSE
    PORCENTAGEM_APLICAR := CONFIGURACAO_ACRESCIMOS.HONORARIOSADVOCATICIOS;
    VALOR_HONORARIO     := (PORCENTAGEM_APLICAR * PARAM_VALOR) / 100;
  END IF;
  RETURN VALOR_HONORARIO;
END GETVALORHONORARIOS;
FUNCTION GETVALORPARCELAPAGO(
    PARAM_ID_PARCELA       IN NUMBER,
    PARAM_SITUACAO_PARCELA IN VARCHAR2)
  RETURN NUMBER
AS
  VALOR NUMBER;
BEGIN
  SELECT COALESCE(SUM(ITEMLOTEBAIXA.valorpago),0)
  INTO VALOR
  FROM ITEMLOTEBAIXAPARCELA it
  INNER JOIN ITEMLOTEBAIXA
  ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
  INNER JOIN LOTEBAIXA
  ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
  INNER JOIN itemdam
  ON itemdam.id = it.ITEMDAM_ID
  INNER JOIN parcelavalordivida pvd
  ON pvd.id                          = itemdam.PARCELA_ID
  WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
  OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
  AND PVD.ID                         = PARAM_ID_PARCELA;
  RETURN VALOR;
END GETVALORPARCELAPAGO;
FUNCTION GETDATAPAGAMENTOPARCELA(
    PARAM_ID_PARCELA       IN NUMBER,
    PARAM_SITUACAO_PARCELA IN VARCHAR2)
  RETURN DATE
AS
  DATAPAG DATE;
BEGIN
  SELECT MAX(LOTEBAIXA.DATAPAGAMENTO)
  INTO DATAPAG
  FROM ITEMLOTEBAIXAPARCELA it
  INNER JOIN ITEMLOTEBAIXA
  ON itemlotebaixa.id = it.ITEMLOTEBAIXA_ID
  INNER JOIN LOTEBAIXA
  ON lotebaixa.id = ITEMLOTEBAIXA.LOTEBAIXA_ID
  INNER JOIN itemdam
  ON itemdam.id = it.ITEMDAM_ID
  INNER JOIN parcelavalordivida pvd
  ON pvd.id                          = itemdam.PARCELA_ID
  WHERE (LOTEBAIXA.SITUACAOLOTEBAIXA = 'BAIXADO'
  OR LOTEBAIXA.SITUACAOLOTEBAIXA     = 'BAIXADO_INCONSITENTE')
  AND PVD.ID                         = PARAM_ID_PARCELA;
  RETURN DATAPAG;
END GETDATAPAGAMENTOPARCELA;
FUNCTION CONTEMINCIDENCIA(
    TIPO_INCIDENCIA           IN VARCHAR2,
    TIPO_ACRESCIMO            IN VARCHAR2,
    CONFIGURACAO_ACRESCIMO_ID IN NUMBER)
  RETURN NUMBER
AS
  RETORNO NUMBER;
BEGIN
  SELECT
    CASE
      WHEN MAX(IA.ID) IS NULL
      THEN 0
      ELSE 1
    END
  INTO RETORNO
  FROM INCIDENCIAACRESCIMO IA
  WHERE IA.CONFIGURACAOACRESCIMOS_ID = CONFIGURACAO_ACRESCIMO_ID
  AND IA.INCIDENCIA                  = TIPO_INCIDENCIA
  AND IA.TIPOACRESCIMO               = TIPO_ACRESCIMO
  AND rownum                         = 1;
  RETURN RETORNO;
END CONTEMINCIDENCIA;
END PACOTE_CONSULTA_DE_DEBITOS;